{"version":3,"file":"static/js/576.08e6c4fe.chunk.js","mappings":"yJAEO,SAASA,IACZ,OACI,gDACkBC,OAAOC,SAASC,QCHnC,SAASC,IACZ,OACI,4CACcC,YCKf,SAASC,EAAWC,GACvB,OACI,iBAAKC,UAAWD,EAAMC,UAAtB,WACI,iBAAMA,UAAU,cAAhB,UACI,SAACJ,EAAD,OAEJ,iBAAMI,UAAU,cAAhB,UACI,SAACR,EAAD,W,4GCLT,SAASS,EAAmBF,GAAe,IAAD,EAC7C,MAAMG,EAAUH,EAAMG,SAEfC,EAAiBC,IAAsBC,EAAAA,EAAAA,WAAS,GACjDC,GAAaC,EAAAA,EAAAA,IAAsBJ,GAEzC,OACI,iBAAKH,UAAS,oBAAKD,EAAMC,iBAAX,QAAwB,IAAtC,UACmBE,EAAQM,YAAc,GACjC,iBACIR,UAAU,yBACVS,QAAS,IAAML,GAAmBM,IAAYA,IAFlD,qBAFR,KASmBP,QAAkCQ,IAAfL,EAC7B,KAAIM,EAAAA,EAAAA,IAAqBV,IACrBW,QAAOC,GAAQA,EAAKC,QAAU,IAC9BC,KAAIF,IAAS,IAAD,EACT,MAAMG,EAASX,EAAYQ,EAAKI,UAChC,OACI,4CACKD,QADL,IACKA,OADL,EACKA,EAAQE,gBADb,QACyB,iBACKR,IAAXM,EAFnB,CAGS,IAHT,KAGgBA,EAAOG,SAHvB,UAKK,MACAC,EAAAA,EAAAA,IAAcP,EAAKC,WANdD,EAAKI,aAfnC,Q,cCDD,SAASI,EAAcvB,GAAe,IAAD,EACxC,MAAMG,EAAUH,EAAMG,QAChBe,GAASM,EAAAA,EAAAA,IAAkB,MAC3BC,GAAkBC,EAAAA,EAAAA,GAAmBvB,GAE3C,IAAKe,EACD,OAAO,KAEX,MAAMS,GAAgB,UAAC3B,EAAM4B,cAAP,QAAiB,GAAK,EACtC5B,EAAM4B,OAAUzB,EAAQ0B,gBACxB,EAGAC,EAAoBH,EAAgB,GAAKF,EAAgBM,aAAe,EACxEC,KAAKC,KAAMR,EAAgBM,aAAcJ,GACzC,EAGAO,EAAyBP,EAAgBG,EAEzCK,EAAqBV,EAAgBW,uBAAyB,GAC7DX,EAAgBW,yBAA2BX,EAAgBI,gBAGlE,OACI,iBAAK5B,UAAWD,EAAMC,UAAtB,WACI,2BACKkC,GAAsB,YAD3B,cAEeb,EAAAA,EAAAA,IAAcG,EAAgBI,gBAAkBF,GAC5CA,EAAgB,EAHnC,CAIS,IAJT,sBAIgCL,EAAAA,EAAAA,IAAcG,EAAgBI,iBAJ9D,aAOeM,GACX,iDACuBb,EAAAA,EAAAA,IAAcG,EAAgBW,uBAAyBF,MAVtF,MAaI,iBAAKjC,UAAU,OAAf,oBACWqB,EAAAA,EAAAA,IAAcG,EAAgBhB,aACpC,KACD,SAACP,EAAD,CACID,UAAU,OACVE,QAASsB,QAGjB,0CACgBH,EAAAA,EAAAA,IAAcG,EAAgBY,iBAAmBH,GAC9CP,EAAgB,GAAKO,EAAyB,EAFjE,CAGS,IAHT,sBAGgCZ,EAAAA,EAAAA,IAAcG,EAAgBY,kBAH9D,UAK8C,IAA3BH,EALnB,CAMS,IANT,8BASA,4BACKI,EAAAA,EAAAA,GAAgB,CACbC,MAAOpC,EAAQ4B,cAAgB,EACzB5B,EAAQ4B,aACR5B,EAAQ4B,aAAeC,KAAKC,KAAK9B,EAAQ4B,aAAcG,KAElDJ,EAAoB,EANvC,CAOuBI,EAAyB,EAPhD,CAQa,IARb,qBAQmCI,EAAAA,EAAAA,GAAgB,CAAEC,MAAOpC,EAAQ4B,eARpE,UAUkD,IAA3BG,EAVvB,CAWa,IAXb,wC,0GCxEL,SAASM,EAAeC,GAA8B,IAAjBC,EAAgB,uDAAJ,GACpD,OAAID,EAAIE,OAASD,EACND,EAEAA,EAAIG,UAAU,EAAGF,EAAY,GAAK,M,oDCc1C,SAASG,EAAW7C,GAAe,IAAD,QACrC,MAAM8C,GAAIC,EAAAA,EAAAA,KACJC,GAAcC,EAAAA,EAAAA,KACdC,GAAqBC,EAAAA,EAAAA,IAAiB,UAACH,EAAYI,aAAb,aAAC,EAAmBC,WAC1DC,GAAeC,EAAAA,EAAAA,IAAgB,MAC/BC,GAAWC,EAAAA,EAAAA,IAAYX,EAAD,UAAIE,EAAYI,aAAhB,aAAI,EAAmBM,OAAQ,KAAM,QAC3DxC,GAASyC,EAAAA,EAAAA,IAAUb,EAAG,MAEtBc,OAA0ChD,KAA9B,UAAAoC,EAAYI,aAAZ,eAAmBM,UAAyBV,EAAYa,SAE1E,OAAKP,GAAiBM,GAIlB,iBAAK3D,UAAU,sBAAf,WACI,oBACIA,UAAS,sBAAkB2D,EAA4B,aAAhB,eACvClD,QAASoD,UACL,QAAelD,IAAXM,EAGJ,GAAK0C,QAA8BhD,IAAjB0C,GAWb,GAAIM,EAAW,CAAC,IAAD,IAChB,MACM5C,EADUgB,KAAK+B,OAAMC,EAAAA,EAAAA,IAAkBhB,EAAYI,MAAOC,YACtC,GAE1BL,EAAYiB,IAAI,MAEhB,MAAMC,QAAiBC,EAAAA,EAAAA,IAAgBrB,EAAGE,EAAYI,MAAOM,cACvDU,EAAAA,EAAAA,IACFtB,EACA,IACOoB,EACHzD,YAAa,IACNyD,EAASzD,YACZ,CAACS,EAAOmD,KAAK,UAACH,EAASzD,YAAYS,EAAOmD,WAA7B,QAAoC,GAAKrD,IAG9DgC,EAAYI,MAAOM,cAGjBY,EAAAA,EAAAA,IAAoCxB,EAAG,CACzCyB,OAAQT,UACwB,IAAxBU,EAAQ/D,cACR+D,EAAQnB,WAAYoB,EAAAA,EAAAA,IAAiBD,EAAQnB,WAAYrC,IAC7DwD,EAAQ/D,aAAeO,EAChBwD,GAEXE,YAPyC,KAQzCC,WAAYC,IAGhB,UAAA5E,EAAM6E,yBAAN,cAAA7E,SAxCAgD,EAAYiB,IAAI,CACZP,OAAQJ,EAAae,GACrBhB,UAAW,IAAIyB,QAGnBC,EAAAA,EAAAA,IAAiCjC,EAAG,CAChC4B,YADgC,KAEhCC,WAAYC,KAd5B,UAmDmB5B,EAAYa,SAnD/B,WAsDoBb,EAAYa,SAtDhC,MAuDUD,EAA2B,WAAf,aACCA,EACV,KAAMoB,EAAAA,EAAAA,IAAyB9B,EAAoB,CAAE+B,KAAM,KAzDxE,KA2DuBrB,IAAyB,OAAZN,QAAY,IAAZA,OAAA,EAAAA,EAAce,OAAd,UAAqBrB,EAAYI,aAAjC,aAAqB,EAAmBM,QA3D5E,cA4DoBJ,EAAe,SAAW,GA5D9C,qBA4DqE1C,IAAb4C,EAAyB,GAAzB,aAAoChB,EAAegB,EAAS0B,KAAM,GAAlE,KA5DxD,cAgEetB,GACX,mBACI3D,UAAU,qBACVS,QAASkE,GAAK9B,EAAEqC,MAAM,CAClBC,KAAM,UACNC,MAAO,eACPC,QAAS,wDACTC,YAAa,MACbC,UAAWC,IACPzC,EAAYiB,IAAI,MACTwB,EAAGC,cAEdC,WAAY,KACZC,SAAUH,GAAMA,EAAGC,aACnBf,WAAYC,EAAEiB,cAbtB,eAlER,QAHO,O,8HCtBR,SAASC,EAAyBhD,GACrC,MAAMiD,EAAW,OACXC,GAAcC,EAAAA,EAAAA,kBAEdC,GAAQC,EAAAA,EAAAA,UACVJ,GACAjC,gBACuBhB,EAAEsD,KAAK,gBACdC,aAEhB,CAAEC,UAAW,MAGXC,GAAUC,EAAAA,EAAAA,cACXC,GAAkBT,EAAYU,aAAaX,EAAUU,IACtD,CAACT,IAGL,OAAOW,EAAAA,EAAAA,UACH,SACOT,EACHK,aAEJ,CAACL,EAAOK,IAIT,SAASK,EAAqB9D,GAAqE,IAAD,uBAAvC+D,EAAuC,iCAAvCA,EAAuC,kBACrG,MAAOT,EAAMU,IAAWxG,EAAAA,EAAAA,YAElByG,GAAUP,EAAAA,EAAAA,cACZ1C,UACI,IAAIkD,EAEJ,IACIA,QAAgBlE,EAAEsD,QAAQS,GAE9B,MAAOI,GAEH,YADAC,QAAQC,KAAK,sBAMjBL,EAAQE,KAEZI,EAAAA,GAKJ,OAFAC,EAAAA,EAAAA,IAAgBvE,EAAGiE,IAEZJ,EAAAA,EAAAA,UACH,MACIP,OACAW,UACAD,aAEJ,CAACV,IAIF,SAASkB,EAAQxE,GAAqE,IAAD,uBAAvC+D,EAAuC,iCAAvCA,EAAuC,kBACxF,MAAM,KAAET,GAASQ,EAAqB9D,KAAM+D,GAC5C,OAAOT,EAGJ,SAAS7C,IACZ,MAAMT,GAAIC,EAAAA,EAAAA,KAD4D,2BAAvC8D,EAAuC,yBAAvCA,EAAuC,gBAEtE,OAAOS,EAAQxE,KAAM+D,GAGlB,SAASpD,EAAYX,EAA0BY,GAAuE,IAAD,uBAAvCmD,EAAuC,iCAAvCA,EAAuC,kBACxH,MAAOT,EAAMU,IAAWxG,EAAAA,EAAAA,YAsBxB,OApBAiH,EAAAA,EAAAA,YACI,KACIzD,eAAeiD,IACX,QAAenG,IAAX8C,EACA,OAEJ,MAAM8D,QAAc1E,EAAE0E,SAASX,GAC/B,IAAK,MAAMY,KAAKD,EACZ,GAAIC,EAAEpD,KAAOX,EAAQ,CACjBoD,EAAQW,GACR,OAIZV,IACAjE,EAAE4E,OAAOX,KAEb,CAACrD,IAGE0C,I,gIC3FX,MAAML,EAAW,eA+BV,SAAS9C,IACZ,MAAMH,GAAIC,EAAAA,EAAAA,KACJiD,GAAcC,EAAAA,EAAAA,kBACdC,EAhCH,SAA6BpD,GAIhC,MAAMoD,GAAQC,EAAAA,EAAAA,UACVJ,GACA,KAAM4B,EAAAA,EAAAA,IAAe7E,IACrB,CACIwD,WAAWsB,EAAAA,EAAAA,IAAY,GACvBC,UAAWC,IACXC,gBAAgB,EAChBC,oBAAoB,EACpBC,sBAAsB,IAc9B,OAVAC,EAAAA,EAAAA,IAA2BpF,EAAG,CAC1BiE,QAASb,EAAMiC,QACfC,iBAAiB,KAGrBC,EAAAA,EAAAA,IAAQ,KACJ,MAAMC,EAAWC,EAAAA,EAAAA,GAA2BrC,EAAMiC,SAClD,MAAO,IAAMI,EAAAA,EAAAA,IAA4BD,MAGtCpC,EAMOsC,CAAoB1F,IAC3Be,EAAU4E,IAAenI,EAAAA,EAAAA,WAAS,GAInC2D,GAAMuC,EAAAA,EAAAA,cACR1C,UACI2E,GAAY,SACNC,EAAAA,EAAAA,IAAe5F,EAAG6F,GAExB3C,EAAYU,aAAaX,EAAU4C,GACnCF,GAAY,KAEhB,CAAC3F,EAAGkD,IAGR,OAAOW,EAAAA,EAAAA,UACH,MACIvD,MAAO8C,EAAMO,KACb5C,WACAI,SAEJ,CAACiC,EAAMO,KAAM5C,EAAUI,M,sEChExB,SAASd,EAAkBE,GAC9B,OAAOuF,EAAavF,GAAa,IAAO,GAOrC,SAASuF,EAAavF,GACzB,MAAOwF,EAAIC,IAASxI,EAAAA,EAAAA,UAAS,GA6B7B,OA3BAiH,EAAAA,EAAAA,YACI,KACI,QAAkB3G,IAAdyC,EAEA,YADAyF,EAAM,GAIV,IAAIC,EACAC,GAAW,EAWf,OAFAD,EAAmBE,uBAPnB,SAASC,IACLJ,GAAMK,EAAAA,EAAAA,IAAa9F,IAEd2F,IACDD,EAAmBE,sBAAsBC,OAK1C,KACHF,GAAW,EACXI,qBAAqBL,MAG7B,CAAC1F,IAGEwF,I,+ECpCJ,SAASnH,EAAmBvB,GAA2B,IAAD,EACzD,MAAMe,GAASM,EAAAA,EAAAA,MACTwB,GAAcC,EAAAA,EAAAA,KACdoG,GAAuBlG,EAAAA,EAAAA,IAAiB,UAACH,EAAYI,aAAb,aAAC,EAAmBC,WAE5D5B,EAAmC,CACrCI,gBAAiB1B,EAAQ0B,gBACzBO,uBAAwBjC,EAAQiC,uBAChC3B,YAAaN,EAAQM,YAAc4I,EACnCC,oBAAqB,IAAKnJ,EAAQmJ,qBAClCjH,iBAAkBlC,EAAQkC,iBAAmBgH,EAC7CtH,aAAc5B,EAAQ4B,cAGA,IAAD,OAAXnB,GAAVM,IACAO,EAAgB6H,oBAAoBpI,EAAOmD,KACvC,UAAClE,EAAQmJ,oBAAoBpI,EAAOmD,WAApC,QAA2C,GACzCgF,GAIV,OAAO5H,I,uFCrBJ,SAASkC,EAAUb,GAA+E,IAAD,uBAAjD+D,EAAiD,iCAAjDA,EAAiD,kBACpG,MAAM0C,GAAQjJ,EAAAA,EAAAA,aACPY,EAAQsI,GAAaD,EAY5B,OAVAhC,EAAAA,EAAAA,YACI,KACI,MAAMkC,OAA0B7I,IAAXiG,GAAwBA,EAAOlE,OAAS,EACvDkE,EACA,CAAC,MACP/D,EAAE5B,UAAUuI,GAAcC,MAAKC,GAAOH,EAAUG,OAEpD,CAAC7G,IAGE5B,EAGJ,SAASM,IACZ,MAAMsB,GAAIC,EAAAA,EAAAA,KADwE,2BAAjD8D,EAAiD,yBAAjDA,EAAiD,gBAElF,OAAOlD,EAAUb,KAAM+D,GAOpB,SAAS+C,EAAc9G,GAA8F,IAApE+G,IAAmE,yDACvH,MAAOtJ,EAAYuJ,IAAiBxJ,EAAAA,EAAAA,YAiBpC,OAfAiH,EAAAA,EAAAA,YACI,KACQsC,QAAyBjJ,IAAfL,GAGduC,EAAEiH,MAAM,WAAWL,MAAKC,IACpB,MAAMK,EAAkB,GACxB,IAAK,MAAMC,KAAKN,EAAIO,QAChBF,EAAIC,EAAE5F,IAAM4F,EAChBH,EAAcE,QAGtB,CAAClH,EAAG+G,EAAQtJ,IAGTA,EAGJ,SAASC,IAA0F,IAApEqJ,IAAmE,yDACrG,MAAM/G,GAAIC,EAAAA,EAAAA,KAD2F,2BAAjD8D,EAAiD,iCAAjDA,EAAiD,kBAErG,OAAO+C,EAAc9G,EAAG+G,KAAWhD,K,2BCpDvC,IAAI/D,EAEG,SAASC,IAQZ,YAPUnC,IAANkC,IACAA,EAAIpD,OAAOyK,cAAcC,OAAO,CAC5BC,QAASvK,WACTwK,OAAQxK,sCAITgD,E,uFCHJ,SAASoF,EAA2BpF,EAA0ByH,IACjElC,EAAAA,EAAAA,IAAQ,KACAkC,EAAQnC,iBACRmC,EAAQxD,UACZjE,EAAE4E,OAAO6C,EAAQxD,YAIlB,SAASM,EAAgBvE,EAA0BiE,GACtD,OAAOmB,EAA2BpF,EAAG,CACjCiE,UACAqB,iBAAiB,M,qECjBlB,SAASC,EAAQmC,GACpB,OAAOjD,EAAAA,EAAAA,WAAUiD,EAAQpD,EAAAA,K,6CCJtB,MAAMA,EAAS,I,+GCcftD,eAAe2G,EAAkB3H,EAA0B4H,GAC9D,MACMC,SADkBC,EAAAA,EAAAA,IAAqB9H,EAAG,KAAM,SAC3BhC,QAAO8D,GAAKA,EAAE/C,gBAAkB,IAErDgJ,EAAc,GAEpB,IAAK,MAAM3G,KAAYyG,EACnBE,EAAKC,KAAK,CACN5F,KAAMhB,EAASkC,KAAKlB,KACpBlE,QAASkD,EAASrC,kBAI1B,IAAIkJ,EAAuB,EAE3B,IAAK,MAAM7G,KAAYyG,EACnBI,GAAwB7G,EAASrC,gBAErC,GAAI6I,EAAmB,EAAG,CACtB,MAAM9I,EAASmJ,EAAuBL,EACtCG,EAAKC,KAAK,CACN5F,KAAM,SACNlE,QAASY,IAGbmJ,GAAwBnJ,EAQ5B,OALAiJ,EAAKC,KAAK,CACN5F,KAAM,QACNlE,QAAS+J,IAGNF,EAyBJ/G,eAAekH,EAAaC,EAAkBC,GACjDhE,QAAQiE,IAAIF,GACZG,IACI,IAAIC,KAAK,CAACJ,GAAW,CAAE7F,KAAM,6BAC7B8F,G,iCCtER,MAAMnF,EAAW,gBAYV,SAASuF,EAAgBxI,GAC5B,MAAMkD,GAAcC,EAAAA,EAAAA,kBACdC,EAZH,SAA8BpD,GACjC,OAAOqD,EAAAA,EAAAA,UACHJ,GACA,KAAMwF,EAAAA,EAAAA,IAAgBzI,IACtB,CACIwD,UAAW,MAOLkF,CAAqB1I,GAOnC,OALAoF,EAAAA,EAAAA,IAA2BpF,EAAG,CAC1BiE,QAAS,IAAMf,EAAYU,aAAaX,OAAUnF,GAClDwH,iBAAiB,IAGdlC,E,8DCTJ,SAASuF,EAAgBzL,GAAe,IAAD,EAC1C,MAAM8C,GAAIC,EAAAA,EAAAA,KACJyB,EAAUxE,EAAMwE,QAEhBxB,GAAcC,EAAAA,EAAAA,KACdyI,GAAqBvI,EAAAA,EAAAA,SACHvC,IAApB4D,EAAQmH,QAAR,UACM3I,EAAYI,aADlB,aACM,EAAmBC,eACnBzC,GAGJgL,EAAmBpH,EAAQ/D,YAAciL,EAE/C,OACI,iBAAKzL,UAAS,uBAAkBD,EAAMC,WAAtC,qBACY4L,EAAAA,EAAAA,GAAWrH,EAAQnB,WAC1B,MAFL,UAGW/B,EAAAA,EAAAA,IAAcsK,QACchL,IAApB4D,EAAQmH,QAJ3B,CAKS,MALT,gBAQI,mBACI1L,UAAU,aACVS,QAASkE,GAAK9B,EAAEqC,MAAM,CAClBC,KAAM,UACNC,MAAO,kBACPC,QAAS,gDACTC,YAAa,MACbC,UAAW1B,UAAa,IAAD,EACnB,MAAMgI,QAAiBP,EAAAA,EAAAA,IAAgBzI,GACjCiJ,EAAQD,EAASE,WAAUC,IAAKC,EAAAA,EAAAA,IAAcD,EAAE5I,UAAWmB,EAAQnB,aAErE0I,GAAS,IACTD,EAASK,OAAOJ,EAAO,SACjBK,EAAAA,EAAAA,IAAgBtJ,EAAGgJ,IAG7B,UAAA9L,EAAMqM,iBAAN,cAAArM,SAEMyF,EAAGC,cAEbC,WAAY,KACZC,SAAUH,GAAMA,EAAGC,aACnBf,WAAYC,EAAEiB,cAtBtB,kBC5BL,SAASyG,EAAatM,GAAe,IAAD,IACvC,MACMuM,EAAejB,GADXvI,EAAAA,EAAAA,OAEHyJ,EAASC,IAAcnM,EAAAA,EAAAA,WAAS,GAEjCqC,EAAM,oBAAG4J,EAAa9F,YAAhB,aAAG,EAAmB9D,cAAtB,QAAgC,EAE5C,OACI,iBAAK1C,UAAS,wBAAmBD,EAAMC,WAAvC,UACmB0C,EAAS,GACpB,4CAEK,MACcA,EAAS,GACpB,iBACI1C,UAAU,YACVS,QAAS,IAAM+L,GAAW9L,IAAYA,IAF1C,SAIM6L,EAAuB,aAAb,aARxB,QAFR,MAeI,gBAAKvM,UAAU,qBAAf,cAE+CW,IAAtB2L,EAAa9F,MAC1B,sCAIqB+F,EACZD,EAAa9F,KAAMxF,KAAIuD,IACpB,SAAC,EAAD,CAEIA,QAASA,EACT6H,UAAWE,EAAapE,SAFnB3D,EAAQnB,UAAUqJ,iBAOhB/J,EAAS,GACpB,SAAC,EAAD,CACI6B,QAAS+H,EAAa9F,KAAM8F,EAAa9F,KAAM9D,OAAS,GACxD0J,UAAWE,EAAapE,UApBpD,UC1BL,SAASwE,EAAqB3M,GACjC,MAAM8C,GAAIC,EAAAA,EAAAA,KACJ+I,EAAWR,EAAgBxI,IAC1B8J,EAAWC,IAAgBvM,EAAAA,EAAAA,WAAS,GAE3C,YAAsBM,IAAlBkL,EAASrF,MACmB,IAAzBqF,EAASrF,KAAK9D,aACsC/B,IAApDkL,EAASrF,KAAKqF,EAASrF,KAAK9D,OAAS,GAAGgJ,QAEpC,MAGP,mBACI1L,UAAS,sCAAiCD,EAAMC,WAChDS,QAASoD,UACD8I,IAGJC,GAAa,SACPC,EAAAA,EAAAA,IAAuBhK,GAAGgB,UAAA,IACzBnD,EACHgL,QAAS,IAAI7G,eAEXgH,EAAS3D,UACf0E,GAAa,KAZrB,SAeMD,EAA4B,MAAhB,gB,cC7B1B,MAAM7G,EAAW,SAUV,SAASgH,EAAoBjK,GAChC,MAAMoD,EATH,SAAkCpD,GACrC,OAAOqD,EAAAA,EAAAA,UACHJ,GACA,KAAMiH,EAAAA,EAAAA,IAAoBlK,IAC1B,CAAEwD,UAAW,MAKH2G,CAAyBnK,GACjCkD,GAAcC,EAAAA,EAAAA,mBAEpBoB,EAAAA,EAAAA,IAAgBvE,EAAGoD,EAAMiC,SAEzB,MAAMlE,GAAMuC,EAAAA,EAAAA,cACR1C,gBACUoJ,EAAAA,EAAAA,IAAoBpK,EAAGqK,GAC7BnH,EAAYU,aAAaX,EAAUoH,KAEvC,CAACnH,IAGL,OAAOW,EAAAA,EAAAA,UACH,iBAAO,CACHvD,MAAK,UAAE8C,EAAMO,YAAR,QAAgB,EACrBxC,SAEJ,CAACiC,EAAMO,KAAMxC,I,cCtBd,SAASmJ,EAAYpN,GAAe,IAAD,EACtC,MAAM8C,GAAIC,EAAAA,EAAAA,MACHsK,EAAOC,IAAYhN,EAAAA,EAAAA,UAAS,IAE7BsB,EAASmL,EAAoBjK,IAEnCyE,EAAAA,EAAAA,YACI,IAAM+F,EAAS1L,EAAOwB,MAAMmK,aAC5B,CAAC3L,EAAOwB,QAGZ,MAAM3B,GAAkBC,EAAAA,EAAAA,GAAmB1B,EAAMG,SAE3CwB,EAAgBC,EAAOwB,MAAQ,EAC/BxB,EAAOwB,MAAQpD,EAAMG,QAAQ0B,gBAC7B,EAGA2L,EAAa7L,EAAgB,GAAKF,EAAgBM,aAAe,EACjEC,KAAKC,KAAMR,EAAgBM,aAAcJ,GACzC,EAGN,OACI,iBAAK1B,UAAS,iCAAkBD,EAAMC,iBAAxB,QAAqC,IAAnD,WACI,kBACImF,KAAK,SACLqI,KAAM,GACNrK,MAAOiK,EACPK,SAAU9I,GAAK0I,EAAS1I,EAAE+I,OAAOvK,OACjCwK,YAAY,iCAEhB,mBACIlN,QAAS,KACL,MAAMmN,EAASC,WAAWT,GACtBQ,EAAS,GACTjM,EAAOqC,IAAI4J,IAJvB,yBASA,uCACavM,EAAAA,EAAAA,IAAcK,GACtB,IAFL,WAEiBL,EAAAA,EAAAA,IAAckM,GAC1B,IAHL,WAGiBlM,EAAAA,EAAAA,IAAcK,EAAgB6L,S,cCvC5C,SAASO,IACpB,MAAMjL,GAAIC,EAAAA,EAAAA,MACH5C,EAAS6N,IAAc1N,EAAAA,EAAAA,UAA0B2N,EAAAA,IAClDrM,EAASmL,EAAoBjK,GAC7ByJ,EAAejB,EAAgBxI,GAC/BoL,ECnBH,WACH,MAAMpL,GAAIC,EAAAA,EAAAA,MACHmL,EAAeC,IAAoB7N,EAAAA,EAAAA,UAAsB,MAOhE,OALA+G,EAAAA,EAAAA,IAAgBvE,GAAGgB,UACf,MAAMkD,QAAgBoH,EAAAA,EAAAA,IAAiBtL,GACvCqL,EAAiBnH,MAGdkH,EDUeG,GAOtB,OALAhH,EAAAA,EAAAA,IAAgBvE,GAAGgB,UACf,MAAMkD,QAAgBsH,EAAAA,EAAAA,IAAkBxL,GACxCkL,EAAWhH,OAIX,iBAAK/G,UAAU,UAAf,WACI,SAACsB,EAAA,EAAD,CACItB,UAAU,UACVE,QAASA,EACTyB,OAAQA,EAAOwB,SAGnB,SAAC,EAAD,CACInD,UAAU,UACVE,QAASA,KAGb,iBAAKF,UAAU,eAAf,WACI,SAAC,EAAD,KACA,iBAAKA,UAAU,UAAf,WACI,SAAC0M,EAAD,KACA,SAAC9J,EAAA,EAAD,CAAYgC,kBAAmB,IAAM0H,EAAapE,kBAG3C+F,GACX,8CACoBrC,EAAAA,EAAAA,GAAWqC,EAAgB,0BArBvD,MAwBI,gBAAKjO,UAAU,iBAAf,UACI,iBAAKA,UAAU,gBAAf,WACI,mBACIA,UAAU,cACVS,QAASoD,SAAYkH,QPVtClH,eAAoChB,EAA0B4H,GACjE,MAAMG,QAAaJ,EAAkB3H,EAAG4H,GAExC,IAAI6D,EAAM,cAEV,IAAK,MAAMC,KAAO3D,EACd0D,GAAO,KAAOC,EAAItJ,KAAO,MAnDPuJ,EAmD+BD,EAAIxN,QAAQ,GAlD1DgB,KAAK+B,MAAe,IAAT0K,GAAc,KADpC,IAA0BA,EAqDtB,OAAOF,EOGuBG,CAAqB5L,EAAGlB,EAAOwB,OACrC,gBAJR,+BASA,mBACInD,UAAU,cACVS,QAASoD,SAAYkH,QPRtClH,eAAsChB,EAA0B4H,GACnE,MAAMG,QAAaJ,EAAkB3H,EAAG4H,GAExC,IAAIiE,EAAO,GAEX,IAAK,MAAMH,KAAO3D,EACd8D,GAAQH,EAAItJ,KAAO,MAAO5D,EAAAA,EAAAA,IAAckN,EAAIxN,SAAW,KAE3D,OAAO2N,EOCuBC,CAAuB9L,EAAGlB,EAAOwB,OACvC,gBAJR,+BAWR,SAACrD,EAAA,EAAD,CAAYE,UAAU,qB,4BEzE3B,SAAS4L,EAAWgD,GAAgD,IAApCC,EAAmC,uDAAd,aACxD,OAAOA,EACFC,WAAW,OAAQF,EAAKG,cAAczB,YACtCwB,WAAW,MAAOF,EAAKI,WAAa,GAAG1B,WAAW2B,SAAS,EAAG,MAC9DH,WAAW,KAAMF,EAAKM,UAAU5B,WAAW2B,SAAS,EAAG,MACvDH,WAAW,KAAMF,EAAKO,WAAW7B,WAAW2B,SAAS,EAAG,MACxDH,WAAW,KAAMF,EAAKQ,aAAa9B,WAAW2B,SAAS,EAAG,MAC1DH,WAAW,KAAMF,EAAKS,aAAa/B,WAAW2B,SAAS,EAAG,M,2GCM5DpL,eAAeyL,EAAqBzM,EAA0ByH,GAAqC,IAAD,IACrG,MAAMuB,QAAiBP,EAAAA,EAAAA,IAAgBzI,GACjCnC,EAAUmL,EAASA,EAASnJ,OAAS,GAE3C,QAAgB/B,IAAZD,QAA6CC,IAApBD,EAAQgL,QACjC,iBAAOpB,EAAQhG,cAAf,aAAO,OAAAgG,GAEX,MAAMiF,GAAerG,EAAAA,EAAAA,IAAaxI,EAAQ0C,WAE1C,GAAImM,GAAeC,EAAAA,EAAAA,IAAgC,EAAtBlF,EAAQ7F,aACjC,iBAAO6F,EAAQhG,cAAf,aAAO,OAAAgG,GAEX,MAAMmF,GAAe1K,EAAAA,EAAAA,KAAyB2K,EAAAA,EAAAA,IAAYH,GAAe,CACrE9K,YAAa,KAGjB,OAAO,IAAIkL,SAAQ,CAACC,EAASC,KACzBhN,EAAEqC,MAAM,CACJC,KAAM,UACNC,MAAO,qBACPC,QAAQ,kCAAD,OAAoCoK,EAApC,oEACPnK,YAAa,MACbC,UAAW1B,UAAa,IAAD,EACnBnD,EAAQgL,QAAU,IAAI7G,WAChBsH,EAAAA,EAAAA,IAAgBtJ,EAAGgJ,GACzB+D,EAAO,UAACtF,EAAQhG,cAAT,aAAC,OAAAgG,UACF9E,EAAGC,cAEbC,WAAY,KACZC,SAAUH,IAAO,IAAD,EAEZ,OADAoK,EAAO,UAACtF,EAAQhG,cAAT,aAAC,OAAAgG,IACD9E,EAAGC,cAEdf,WAAY4F,EAAQ5F,WAAWkB,iBAKpC,SAASd,EAAiCjC,EAA0ByH,GACvE,OAAOgF,EAAqBzM,EAAG,CAC3B4B,YAAa6F,EAAQ7F,YACrBC,WAAY4F,EAAQ5F,WACpBJ,OAAQT,UAAa,IAAD,QAEVgJ,EAAAA,EAAAA,IAAuBhK,GAAGgB,SAAiBU,IAEjD,UAAA+F,EAAQhG,cAAR,cAAAgG,MAKL,SAASjG,EAAoCxB,EAA0ByH,GAC1E,OAAOgF,EAAqBzM,EAAG,CAC3ByB,OAAQ,KAAMuI,EAAAA,EAAAA,IAAuBhK,EAAGyH,EAAQhG,QAChDG,YAAa6F,EAAQ7F,YACrBC,WAAY4F,EAAQ5F,e,8DCvD5B,SAASoL,EAAKC,EAAMD,GAAM,MACJ,oBAATA,EAAsBA,EAAO,CAAEE,SAAS,GAC1B,iBAATF,IACd7I,QAAQC,KAAK,sDACb4I,EAAO,CAAEE,SAAUF,IAKjBA,EAAKE,SAAW,6EAA6EC,KAAKF,EAAK5K,MAClG,IAAIiG,KAAK,CAAC,SAA6B2E,GAAO,CAAE5K,KAAM4K,EAAK5K,OAE7D4K,EAGT,SAASvI,EAAUuI,EAAKD,EAAMtI,GAC5B,IAAI0I,EAAM,IAAIC,eACdD,EAAIE,KAAK,MAAOL,GAChBG,EAAIG,aAAe,OACnBH,EAAII,OAAS,WACXC,EAAOL,EAAIM,SAAUV,EAAMtI,IAE7B0I,EAAIO,QAAU,WACZxJ,QAAQD,MAAM,4BAEhBkJ,EAAIQ,OAGN,SAASR,EAAaH,GACpB,IAAID,EAAM,IAAIK,eAEdL,EAAIM,KAAK,OAAQL,GAAjB,GACA,IACED,EAAIY,OACJ,MAAOX,IACT,OAAqB,KAAdD,EAAIa,QAA+B,KAAdb,EAAIa,OAIlC,SAAShM,EAAOoL,GACd,IACEA,EAAKa,cAAc,IAAIC,WAAW,UAClC,MAAOrJ,GACP,IAAIsI,EAAMgB,SAASC,YAAY,eAC/BjB,EAAIkB,eAAe,SAAnB,KAAwCvR,OAAQ,EAAG,EAAG,EAAG,GACnC,IADtB,WACsD,EAAG,MACzDsQ,EAAKa,cAAcd,I,IApDnBmB,EAA4B,iBAAXxR,QAAuBA,OAAOA,SAAWA,OAC1DA,OAAyB,iBAATyR,MAAqBA,KAAKA,OAASA,KACnDA,KAAyB,iBAAXC,EAAAA,GAAuBA,EAAAA,EAAOA,SAAWA,EAAAA,EACvDA,EAAAA,OADO,EAyDPpB,EAAiBkB,EAAQG,WAAa,YAAYnB,KAAKmB,UAAUC,YAAc,cAAcpB,KAAKmB,UAAUC,aAAe,SAASpB,KAAKmB,UAAUC,WAEnJd,EAASU,EAAQ9F,SAEA,iBAAX1L,QAAuBA,SAAWwR,EACtC,aAGD,aAAcK,kBAAkBC,YAAcxB,EAC/C,SAAiBD,EAAMS,EAAMiB,GAAM,IAC/BC,EAAMR,EAAQS,KAAOT,EAAQU,UAC7BC,EAAId,SAASe,cAAc,KAC/BtB,EAAOA,GAAQT,EAAK7K,MAAQ,WAE5B2M,EAAEE,SAAWvB,EACbqB,EAAEG,IAAM,WAKY,iBAATjC,GAET8B,EAAEI,KAAOlC,EACL8B,EAAEK,SAAWvS,SAASuS,OAKxBtN,EAAMiN,GAJN1B,EAAY0B,EAAEI,MACVxK,EAASsI,EAAMS,EAAMiB,GACrB7M,EAAMiN,EAAGA,EAAElE,OAAS,YAM1BkE,EAAEI,KAAOP,EAAIS,gBAAgBpC,GAC7BqC,YAAW,WAAcV,EAAIW,gBAAgBR,EAAEI,QAAS,KACxDG,YAAW,WAAcxN,EAAMiN,KAAM,KAKvC,qBAAsBR,UACtB,SAAiBH,EAAMV,EAAMiB,GAG7B,GAFAjB,EAAOA,GAAQU,EAAKhM,MAAQ,WAER,iBAATgM,EAUTG,UAAUiB,iBAAiBvC,EAAImB,EAAMO,GAAOjB,QAT5C,GAAIL,EAAYe,GACdzJ,EAASyJ,EAAMV,EAAMiB,OAChB,CACL,IAAIC,EAAIX,SAASe,cAAc,KAC/BJ,EAAEO,KAAOf,EACTQ,EAAE/D,OAAS,SACXyE,YAAW,WAAcxN,EAAM8M,QAQnC,SAAiB3B,EAAMI,EAAMvL,EAAM4L,GASnC,IANAA,EAAQA,GAASH,KAAK,GAAI,aAExBG,EAAMO,SAAS1L,MACfmL,EAAMO,SAASwB,KAAKC,UAAY,kBAGd,iBAATzC,EAAmB,OAAOtI,EAASsI,EAAMI,EAAMvL,GAThB,IAWtC6M,EAAsB,6BAAd1B,EAAK3K,KACbsM,EAAW,eAAexB,KAAKgB,EAAQuB,cAAgBvB,EAAQwB,OAC/Db,EAAc,eAAe3B,KAAKmB,UAAUC,WAEhD,IAAKO,GAAgBJ,GAASC,GAAa1B,IAAyC,oBAAf2C,WAA4B,CAE/F,IAAIC,EAAS,IAAID,WACjBC,EAAOC,UAAY,WACjB,IAAI7C,EAAM4C,EAAOE,OACjB9C,EAAM6B,EAAc7B,EAAMA,EAAI+C,QAAQ,eAAgB,yBAClDvC,EAAOA,EAAM7Q,SAASsS,KAAOjC,EAC5BrQ,SAAWqQ,EAChBQ,EAAQ,MAEVoC,EAAOI,cAAcjD,OAChB,KACDkD,EAAM/B,EAAQS,KAAOT,EAAQU,UAC7B3H,EAAMgJ,EAAId,gBAAgBpC,GAC1BS,EAAOA,EAAM7Q,SAAWsK,EACvBtK,SAASsS,KAAOhI,EACrBuG,EAAQ,KACR4B,YAAW,WAAca,EAAIZ,gBAAgBpI,KAAQ,QAK3DiH,EAAQ9F,OAASoF,EAAOpF,OAASoF,EAG/B0C,EAAOC,QAAU3C,Q","sources":["components/ServedFrom.tsx","components/Version.tsx","components/DeployInfo.tsx","components/SummaryWorkDetails.tsx","components/SummaryDetail.tsx","utils/truncate.ts","components/WorkButton.tsx","hooks/useCard.ts","hooks/useCurrentWork.ts","hooks/useElapsed.ts","hooks/useElapsingSummary.ts","hooks/useMember.ts","hooks/useProvidedTrello.ts","hooks/useTrelloRender.ts","jk/hooks/useInit.ts","jk/noDeps.ts","utils/export.ts","hooks/useWorkSessions.ts","components/WorkSessionItem.tsx","components/WorkSessions.tsx","components/EndWorkSessionButton.tsx","hooks/useMarginMultiplier.ts","components/MarginInput.tsx","pages/BoardSummaryPage.tsx","hooks/useLastInputTime.ts","utils/dateFormatting.ts","utils/workSessionsUtils.ts","../node_modules/file-saver/src/FileSaver.js"],"sourcesContent":["import React from \"react\";\n\nexport function ServedFrom() {\n    return (\n        <>\n            Served from: {window.location.host}\n        </>\n    );\n}\n","import React from \"react\";\n\nexport function Version() {\n    return (\n        <>\n            Version: {process.env.REACT_APP_VERSION}\n        </>\n    );\n}\n","import React from \"react\";\n\nimport \"./DeployInfo.scss\";\nimport { ServedFrom } from \"./ServedFrom\";\nimport { Version } from \"./Version\";\n\ntype Props = {\n    className?: string;\n}\n\nexport function DeployInfo(props: Props) {\n    return (\n        <div className={props.className}>\n            <span className=\"deploy-text\">\n                <Version />\n            </span>\n            <span className=\"deploy-text\">\n                <ServedFrom />\n            </span>\n        </div>\n    );\n}\n","import React, { useState } from \"react\";\n\nimport { If } from \"../jk/types/jsxControlStatements\";\nimport { SummaryEstimate, enumerateWorkSummary } from \"../api/estimateApi\";\nimport { formatMinutes } from \"../utils/timeParsing\";\nimport { useProvidedMemberById } from \"../hooks/useMember\";\n\ntype Props = {\n    className?: string,\n    summary: SummaryEstimate,\n}\n\nexport function SummaryWorkDetails(props: Props) {\n    const summary = props.summary;\n\n    const [showWorkDetails, setShowWorkDetails] = useState(false);\n    const memberById = useProvidedMemberById(showWorkDetails);\n\n    return (\n        <div className={`${props.className ?? \"\"}`}>\n            <If condition={summary.workMinutes > 0}>\n                <span\n                    className='work-details link-like'\n                    onClick={() => setShowWorkDetails(current => !current)}\n                >\n                    details\n                </span>\n            </If>\n            <If condition={showWorkDetails && memberById !== undefined}>\n                {[...enumerateWorkSummary(summary)]\n                    .filter(item => item.minutes > 0)\n                    .map(item => {\n                        const member = memberById![item.memberId];\n                        return (\n                            <div key={item.memberId}>\n                                {member?.fullName ?? \"<missing>\"}\n                                <If condition={member !== undefined}>\n                                    {\" \"} ({member.username})\n                                </If>\n                                {\": \"}\n                                {formatMinutes(item.minutes)}\n                            </div>\n                        );\n                    })\n                }\n            </If>\n        </div>\n    );\n}\n","import React from \"react\";\n\nimport { SummaryEstimate } from \"../api/estimateApi\";\nimport { useCurrentWork } from \"../hooks/useCurrentWork\";\nimport { useElapsedMinutes } from \"../hooks/useElapsed\";\nimport { If } from \"../jk/types/jsxControlStatements\";\nimport { formatMinutes } from \"../utils/timeParsing\";\nimport { formatWorkDelta } from \"../utils/workDelta\";\nimport { useProvidedMember } from \"../hooks/useMember\";\nimport { SummaryWorkDetails } from \"./SummaryWorkDetails\";\nimport { useElapsingSummary } from \"../hooks/useElapsingSummary\";\n\ntype Props = {\n    className?: string,\n    summary: SummaryEstimate,\n    margin?: number,\n}\n\nexport function SummaryDetail(props: Props) {\n    const summary = props.summary;\n    const member = useProvidedMember(\"id\");\n    const elapsingSummary = useElapsingSummary(summary);\n\n    if (!member)\n        return null;\n\n    const marginMinutes = (props.margin ?? 0) > 0\n        ? props.margin! * summary.estimateMinutes\n        : 0\n        ;\n\n    const usedMarginMinutes = marginMinutes > 0 && elapsingSummary.deltaMinutes < 0\n        ? Math.min(- elapsingSummary.deltaMinutes, marginMinutes)\n        : 0\n        ;\n\n    const remainingMarginMinutes = marginMinutes - usedMarginMinutes;\n\n    const hasUpdatedEstimate = elapsingSummary.updatedEstimateMinutes > 0\n        && elapsingSummary.updatedEstimateMinutes !== elapsingSummary.estimateMinutes\n        ;\n\n    return (\n        <div className={props.className}>\n            <div>\n                {hasUpdatedEstimate && \"Original \"}\n                Estimate: {formatMinutes(elapsingSummary.estimateMinutes + marginMinutes)}\n                <If condition={marginMinutes > 0}>\n                    {\" \"} (without margin: {formatMinutes(elapsingSummary.estimateMinutes)})\n                </If>\n            </div>\n            <If condition={hasUpdatedEstimate}>\n                <div>\n                    Updated Estimate: {formatMinutes(elapsingSummary.updatedEstimateMinutes + remainingMarginMinutes)}\n                </div>\n            </If>\n            <div className=\"flex\">\n                Work: {formatMinutes(elapsingSummary.workMinutes)}\n                {\" \"}\n                <SummaryWorkDetails\n                    className=\"ml-2\"\n                    summary={elapsingSummary}\n                />\n            </div>\n            <div>\n                Remaining: {formatMinutes(elapsingSummary.remainingMinutes + remainingMarginMinutes)}\n                <If condition={marginMinutes > 0 && remainingMarginMinutes > 0}>\n                    {\" \"} (without margin: {formatMinutes(elapsingSummary.remainingMinutes)})\n                </If>\n                <If condition={remainingMarginMinutes === 0}>\n                    {\" \"} (no margin left)\n                </If>\n            </div>\n            <div>\n                {formatWorkDelta({\n                    delta: summary.deltaMinutes >= 0\n                        ? summary.deltaMinutes\n                        : summary.deltaMinutes + Math.min(-summary.deltaMinutes, remainingMarginMinutes),\n                })}\n                <If condition={usedMarginMinutes > 0}>\n                    <If condition={remainingMarginMinutes > 0}>\n                        {\" \"} (without margin {formatWorkDelta({ delta: summary.deltaMinutes })})\n                    </If>\n                    <If condition={remainingMarginMinutes === 0}>\n                        {\" \"} (no margin left)\n                    </If>\n                </If>\n            </div>\n        </div>\n    );\n}\n","\nexport function truncateString(str: string, maxLength = 10) {\n    if (str.length < maxLength)\n        return str;\n    else\n        return str.substring(0, maxLength - 3) + \"...\";\n}\n","import React from \"react\";\n\nimport \"./WorkButton.scss\";\nimport { useCurrentWork } from \"../hooks/useCurrentWork\";\nimport { useCardById, useProvidedCard } from \"../hooks/useCard\";\nimport { getCardEstimate, setCardEstimate } from \"../api/estimateApi\";\nimport { useElapsedMinutes } from \"../hooks/useElapsed\";\nimport { formatMinutesWithOptions, hoursPerDay } from \"../utils/timeParsing\";\nimport { truncateString } from \"../utils/truncate\";\nimport { useProvidedTrello } from \"../hooks/useProvidedTrello\";\nimport { useMember } from \"../hooks/useMember\";\nimport { addMinutesToDate, getElapsedSeconds } from \"../utils/dateMath\";\nimport { askToCloseOldSessionAndCreateNew, closeIfOldAndEditCurrentWorkSession } from \"../utils/workSessionsUtils\";\nimport { If } from \"../jk/types/jsxControlStatements\";\n\ntype Props = {\n    onEstimateChanged?: () => void;\n}\n\nexport function WorkButton(props: Props) {\n    const t = useProvidedTrello();\n    const currentWork = useCurrentWork();\n    const elapsedWorkMinutes = useElapsedMinutes(currentWork.value?.startDate);\n    const providedCard = useProvidedCard(\"id\");\n    const workCard = useCardById(t, currentWork.value?.cardId, \"id\", \"name\");\n    const member = useMember(t, \"id\");\n\n    const isWorking = currentWork.value?.cardId !== undefined && !currentWork.isSaving;\n\n    if (!providedCard && !isWorking)\n        return null;\n\n    return (\n        <div className=\"work-button-wrapper\">\n            <button\n                className={`work-button ${!isWorking ? \"mod-primary\" : \"mod-danger\"}`}\n                onClick={async e => {\n                    if (member === undefined)\n                        return;\n\n                    if (!isWorking && providedCard !== undefined) {\n                        currentWork.set({\n                            cardId: providedCard.id,\n                            startDate: new Date(),\n                        });\n\n                        askToCloseOldSessionAndCreateNew(t, {\n                            hoursPerDay,\n                            mouseEvent: e,\n                        });\n                    }\n                    else if (isWorking) {\n                        const seconds = Math.round(getElapsedSeconds(currentWork.value!.startDate));\n                        const minutes = seconds / 60;\n\n                        currentWork.set(null);\n\n                        const estimate = await getCardEstimate(t, currentWork.value!.cardId);\n                        await setCardEstimate(\n                            t,\n                            {\n                                ...estimate,\n                                workMinutes: {\n                                    ...estimate.workMinutes,\n                                    [member.id]: (estimate.workMinutes[member.id] ?? 0) + minutes,\n                                },\n                            },\n                            currentWork.value!.cardId,\n                        );\n\n                        await closeIfOldAndEditCurrentWorkSession(t, {\n                            action: async session => {\n                                if (session.workMinutes === 0)\n                                    session.startDate = addMinutesToDate(session.startDate, -minutes);\n                                session.workMinutes += minutes;\n                                return session;\n                            },\n                            hoursPerDay,\n                            mouseEvent: e,\n                        });\n\n                        props.onEstimateChanged?.();\n                    }\n                }}\n            >\n                <If condition={currentWork.isSaving}>\n                ...\n                </If>\n                <If condition={!currentWork.isSaving}>\n                    {!isWorking ? \"Start work\" : \"End work\"}\n                    <If condition={isWorking}>\n                        {\" \" + formatMinutesWithOptions(elapsedWorkMinutes, { zero: \"\" })}\n                    </If>\n                    <If condition={isWorking && providedCard?.id !== currentWork.value?.cardId}>\n                        {` (on${providedCard ? \" other\" : \"\"} card${workCard === undefined ? \"\" : `: \"${truncateString(workCard.name, 8)}\"`})`}\n                    </If>\n                </If>\n            </button>\n            <If condition={isWorking}>\n                <button\n                    className=\"cancel-work-button\"\n                    onClick={e => t.popup({\n                        type: \"confirm\",\n                        title: \"Cancel work?\",\n                        message: \"Are you sure you want to cancel the work in progress?\",\n                        confirmText: \"Yes\",\n                        onConfirm: tp => {\n                            currentWork.set(null);\n                            return tp.closePopup();\n                        },\n                        cancelText: \"No\",\n                        onCancel: tp => tp.closePopup(),\n                        mouseEvent: e.nativeEvent,\n                    })}\n                >\n                    X\n                </button>\n            </If>\n        </div>\n    );\n}\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { useQuery, useQueryClient } from \"react-query\";\n\nimport { Trello } from \"../types/trello\";\nimport { noDeps } from \"../jk/noDeps\";\nimport { useProvidedTrello } from \"./useProvidedTrello\";\nimport { useTrelloRender } from \"./useTrelloRender\";\n\nexport function useCardDueCompletedQuery(t: Trello.PowerUp.IFrame) {\n    const queryKey = \"card\";\n    const queryClient = useQueryClient();\n\n    const query = useQuery(\n        queryKey,\n        async () => {\n            const card = await t.card(\"dueComplete\");\n            return card.dueComplete;\n        },\n        { staleTime: 1000 },\n    );\n\n    const setData = useCallback(\n        (data: boolean) => queryClient.setQueryData(queryKey, data),\n        [queryClient],\n    );\n\n    return useMemo(\n        () => ({\n            ...query,\n            setData,\n        }),\n        [query, setData],\n    );\n}\n\nexport function useCardWithFunctions(t: Trello.PowerUp.IFrame, ...fields: (keyof Trello.PowerUp.Card)[]) {\n    const [card, setCard] = useState<Trello.PowerUp.Card>();\n\n    const refresh = useCallback(\n        async () => {\n            let fetched: Trello.PowerUp.Card;\n\n            try {\n                fetched = await t.card(...fields);\n            }\n            catch (error) {\n                console.warn(\"no card in context\");\n                return;\n            }\n\n            // console.log(\"refreshed card complete\", fetched.dueComplete);\n\n            setCard(fetched);\n        },\n        noDeps,\n    );\n\n    useTrelloRender(t, refresh);\n\n    return useMemo(\n        () => ({\n            card,\n            refresh,\n            setCard,\n        }),\n        [card],\n    );\n}\n\nexport function useCard(t: Trello.PowerUp.IFrame, ...fields: (keyof Trello.PowerUp.Card)[]) {\n    const { card } = useCardWithFunctions(t, ...fields);\n    return card;\n}\n\nexport function useProvidedCard(...fields: (keyof Trello.PowerUp.Card)[]) {\n    const t = useProvidedTrello();\n    return useCard(t, ...fields);\n}\n\nexport function useCardById(t: Trello.PowerUp.IFrame, cardId: string | undefined, ...fields: (keyof Trello.PowerUp.Card)[]) {\n    const [card, setCard] = useState<Trello.PowerUp.Card>();\n\n    useEffect(\n        () => {\n            async function refresh() {\n                if (cardId === undefined)\n                    return;\n\n                const cards = await t.cards(...fields);\n                for (const c of cards) {\n                    if (c.id === cardId) {\n                        setCard(c);\n                        break;\n                    }\n                }\n            }\n            refresh();\n            t.render(refresh);\n        },\n        [cardId],\n    );\n\n    return card;\n}\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { useQuery, useQueryClient } from \"react-query\";\n\nimport { CurrentWork, getCurrentWork, setCurrentWork } from \"../api/estimateApi\";\nimport { currentWorkChangedEvent } from \"../api/events/apiEvents\";\nimport { useInit } from \"../jk/hooks/useInit\";\nimport { Trello } from \"../types/trello\";\nimport { minutesToMs } from \"../utils/timeParsing\";\nimport { useProvidedTrello } from \"./useProvidedTrello\";\nimport { useTrelloRenderWithOptions } from \"./useTrelloRender\";\n\nconst queryKey = \"current_work\";\n\nexport function useCurrentWorkQuery(t: Trello.PowerUp.IFrame) {\n    // N.B. la query sembra che non venga cachata, penso che il motivo sia che\n    // ogni volta che viene aperta una scheda viene avviata una nuova\n    // istanza di react\n    const query = useQuery(\n        queryKey,\n        () => getCurrentWork(t),\n        {\n            staleTime: minutesToMs(2),\n            cacheTime: Infinity,\n            refetchOnMount: false,\n            refetchOnReconnect: false,\n            refetchOnWindowFocus: false,\n        },\n    );\n\n    useTrelloRenderWithOptions(t, {\n        refresh: query.refetch,\n        callImmediately: false,\n    });\n\n    useInit(() => {\n        const listener = currentWorkChangedEvent.on(query.refetch as any);\n        return () => currentWorkChangedEvent.off(listener) as any;\n    });\n\n    return query;\n}\n\nexport function useCurrentWork() {\n    const t = useProvidedTrello();\n    const queryClient = useQueryClient();\n    const query = useCurrentWorkQuery(t);\n    const [isSaving, setIsSaving] = useState(false);\n\n    // console.log(\"query stale: \" + query.isStale);\n\n    const set = useCallback(\n        async (updated: CurrentWork | null) => {\n            setIsSaving(true);\n            await setCurrentWork(t, updated);\n            // console.log(\"setting query data\");\n            queryClient.setQueryData(queryKey, updated);\n            setIsSaving(false);\n        },\n        [t, queryClient],\n    );\n\n    return useMemo(\n        () => ({\n            value: query.data,\n            isSaving,\n            set,\n        }),\n        [query.data, isSaving, set],\n    );\n}\n","import { useEffect, useState } from \"react\";\nimport { getElapsedMs } from \"../utils/dateMath\";\n\nexport function useElapsedMinutes(startDate: Date | undefined) {\n    return useElapsedMs(startDate) / 1000 / 60;\n}\n\nexport function useElapsedSeconds(startDate: Date | undefined) {\n    return useElapsedMs(startDate) / 1000;\n}\n\nexport function useElapsedMs(startDate: Date | undefined) {\n    const [ms, setMs] = useState(0);\n\n    useEffect(\n        () => {\n            if (startDate === undefined) {\n                setMs(0);\n                return;\n            }\n\n            let animationFrameId: number;\n            let canceled = false;\n\n            function updateSeconds() {\n                setMs(getElapsedMs(startDate!));\n\n                if (!canceled)\n                    animationFrameId = requestAnimationFrame(updateSeconds);\n            }\n\n            animationFrameId = requestAnimationFrame(updateSeconds);\n\n            return () => {\n                canceled = true;\n                cancelAnimationFrame(animationFrameId);\n            };\n        },\n        [startDate],\n    );\n\n    return ms;\n}\n","import { SummaryEstimate } from \"../api/estimateApi\";\nimport { useCurrentWork } from \"./useCurrentWork\";\nimport { useElapsedMinutes } from \"./useElapsed\";\nimport { useProvidedMember } from \"./useMember\";\n\nexport function useElapsingSummary(summary: SummaryEstimate) {\n    const member = useProvidedMember();\n    const currentWork = useCurrentWork();\n    const myElapsedWorkMinutes = useElapsedMinutes(currentWork.value?.startDate);\n\n    const elapsingSummary: SummaryEstimate = {\n        estimateMinutes: summary.estimateMinutes,\n        updatedEstimateMinutes: summary.updatedEstimateMinutes,\n        workMinutes: summary.workMinutes + myElapsedWorkMinutes,\n        workMinutesByMember: { ...summary.workMinutesByMember },\n        remainingMinutes: summary.remainingMinutes - myElapsedWorkMinutes,\n        deltaMinutes: summary.deltaMinutes,\n    };\n\n    if (member != undefined) {\n        elapsingSummary.workMinutesByMember[member.id] = (\n            (summary.workMinutesByMember[member.id] ?? 0)\n            + myElapsedWorkMinutes\n        );\n    }\n\n    return elapsingSummary;\n}\n","import { useEffect, useState } from \"react\";\n\nimport { Trello } from \"../types/trello\";\nimport { useProvidedTrello } from \"./useProvidedTrello\";\n\nexport function useMember(t: Trello.PowerUp.IFrame, ...fields: [\"all\"] | Trello.PowerUp.MemberFields[]) {\n    const state = useState<Trello.PowerUp.Member>();\n    const [member, setMember] = state;\n\n    useEffect(\n        () => {\n            const actualFields = fields !== undefined && fields.length > 0\n                ? fields\n                : [\"id\"] as Trello.PowerUp.MemberFields[];\n            t.member(...actualFields).then(res => setMember(res));\n        },\n        [t],\n    );\n\n    return member;\n}\n\nexport function useProvidedMember(...fields: [\"all\"] | Trello.PowerUp.MemberFields[]) {\n    const t = useProvidedTrello();\n    return useMember(t, ...fields);\n}\n\nexport type MemberById = {\n    [key: Trello.PowerUp.Member[\"id\"]]: Trello.PowerUp.Member,\n}\n\nexport function useMemberById(t: Trello.PowerUp.IFrame, isLazy = true, ...fields: [\"all\"] | Trello.PowerUp.MemberFields[]) {\n    const [memberById, setMemberById] = useState<MemberById>();\n\n    useEffect(\n        () => {\n            if (isLazy || memberById !== undefined)\n                return;\n\n            t.board(\"members\").then(res => {\n                const obj: MemberById = {};\n                for (const m of res.members)\n                    obj[m.id] = m;\n                setMemberById(obj);\n            });\n        },\n        [t, isLazy, memberById],\n    );\n\n    return memberById;\n}\n\nexport function useProvidedMemberById(isLazy = true, ...fields: [\"all\"] | Trello.PowerUp.MemberFields[]) {\n    const t = useProvidedTrello();\n    return useMemberById(t, isLazy, ...fields);\n}\n","import { Trello } from \"../types/trello\";\n\nlet t: Trello.PowerUp.IFrame;\n\nexport function useProvidedTrello() {\n    if (t === undefined) {\n        t = window.TrelloPowerUp.iframe({\n            appName: process.env.REACT_APP_POWERUP_NAME,\n            appKey: process.env.REACT_APP_POWERUP_APP_KEY,\n        });\n    }\n\n    return t;\n}\n","import { Trello } from \"../types/trello\";\nimport { useInit } from \"../jk/hooks/useInit\";\nimport { useProvidedTrello } from \"./useProvidedTrello\";\n\nexport type TrelloRenderOptions = {\n    refresh: () => void;\n    callImmediately?: boolean;\n}\n\nexport function useTrelloRenderWithOptions(t: Trello.PowerUp.IFrame, options: TrelloRenderOptions) {\n    useInit(() => {\n        if (options.callImmediately)\n            options.refresh();\n        t.render(options.refresh);\n    });\n}\n\nexport function useTrelloRender(t: Trello.PowerUp.IFrame, refresh: () => void) {\n    return useTrelloRenderWithOptions(t, {\n        refresh,\n        callImmediately: true,\n    });\n}\n\nexport function useProvidedTrelloRender(refresh: () => void) {\n    const t = useProvidedTrello();\n    return useTrelloRender(t, refresh);\n}\n","import React, { useEffect } from \"react\";\nimport { noDeps } from \"../noDeps\";\n\nexport function useInit(effect: React.EffectCallback) {\n    return useEffect(effect, noDeps);\n}\n","export const noDeps = [];\n","import saveAs from \"file-saver\";\nimport { getAllCardsEstimates } from \"../api/estimateApi\";\nimport { Trello } from \"../types/trello\";\nimport { formatMinutes } from \"./timeParsing\";\n\nfunction roundTo2Decimals(number: number) {\n    return Math.round(number * 100)/100;\n}\n\ntype Row = {\n    name: string;\n    minutes: number;\n}\n\nexport async function getExportableRows(t: Trello.PowerUp.IFrame, marginPercentage: number) {\n    const estimates = await getAllCardsEstimates(t, \"id\", \"name\");\n    const filtered = estimates.filter(e => e.estimateMinutes > 0);\n\n    const rows: Row[] = [];\n\n    for (const estimate of filtered) {\n        rows.push({\n            name: estimate.card.name,\n            minutes: estimate.estimateMinutes,\n        });\n    }\n\n    let totalEstimateMinutes = 0;\n\n    for (const estimate of filtered)\n        totalEstimateMinutes += estimate.estimateMinutes;\n\n    if (marginPercentage > 0) {\n        const margin = totalEstimateMinutes * marginPercentage;\n        rows.push({\n            name: \"margin\",\n            minutes: margin,\n        });\n\n        totalEstimateMinutes += margin;\n    }\n\n    rows.push({\n        name: \"total\",\n        minutes: totalEstimateMinutes,\n    });\n\n    return rows;\n}\n\nexport async function exportEstimatesToTsv(t: Trello.PowerUp.IFrame, marginPercentage: number) {\n    const rows = await getExportableRows(t, marginPercentage);\n\n    let tsv = \"Task\\tHours\";\n\n    for (const row of rows)\n        tsv += \"\\n\" + row.name + \"\\t\" + roundTo2Decimals(row.minutes/60);\n\n    return tsv;\n}\n\nexport async function exportEstimatesForMail(t: Trello.PowerUp.IFrame, marginPercentage: number) {\n    const rows = await getExportableRows(t, marginPercentage);\n\n    let mail = \"\";\n\n    for (const row of rows)\n        mail += row.name + \"  \" + formatMinutes(row.minutes) + \"\\n\";\n\n    return mail;\n}\n\nexport async function exportToFile(contents: string, filename: string) {\n    console.log(contents);\n    saveAs(\n        new Blob([contents], { type: \"text/plain;charset=utf-8\" }),\n        filename,\n    );\n}\n","import { useQuery, useQueryClient } from \"react-query\";\n\nimport { getWorkSessions } from \"../api/estimateApi\";\nimport { Trello } from \"../types/trello\";\nimport { useTrelloRenderWithOptions } from \"./useTrelloRender\";\n\nconst queryKey = \"work_sessions\";\n\nexport function useWorkSessionsQuery(t: Trello.PowerUp.IFrame) {\n    return useQuery(\n        queryKey,\n        () => getWorkSessions(t),\n        {\n            staleTime: 5 * 1000,\n        },\n    );\n}\n\nexport function useWorkSessions(t: Trello.PowerUp.IFrame) {\n    const queryClient = useQueryClient();\n    const query = useWorkSessionsQuery(t);\n\n    useTrelloRenderWithOptions(t, {\n        refresh: () => queryClient.setQueryData(queryKey, undefined),\n        callImmediately: false,\n    });\n\n    return query;\n}\n","import React from \"react\";\n\nimport \"./WorkSessionItem.scss\";\nimport { getWorkSessions, setWorkSessions, WorkSession } from \"../api/estimateApi\";\nimport { useCurrentWork } from \"../hooks/useCurrentWork\";\nimport { useElapsedMinutes } from \"../hooks/useElapsed\";\nimport { If } from \"../jk/types/jsxControlStatements\";\nimport { formatMinutes } from \"../utils/timeParsing\";\nimport { useProvidedTrello } from \"../hooks/useProvidedTrello\";\nimport { areDatesEqual } from \"../utils/dateMath\";\nimport { formatDate } from \"../utils/dateFormatting\";\n\ntype Props = {\n    className?: string;\n    session: WorkSession;\n    onRefresh?: () => void;\n}\n\nexport function WorkSessionItem(props: Props) {\n    const t = useProvidedTrello();\n    const session = props.session;\n\n    const currentWork = useCurrentWork();\n    const currentWorkMinutes = useElapsedMinutes(\n        session.endDate === undefined\n            ? currentWork.value?.startDate\n            : undefined,\n    );\n\n    const totalWorkMinutes = session.workMinutes + currentWorkMinutes;\n\n    return (\n        <div className={`work-session ${props.className}`}>\n            Start: {formatDate(session.startDate)}\n            {\" | \"}\n            Work: {formatMinutes(totalWorkMinutes)}\n            <If condition={session.endDate !== undefined}>\n                {\" | \"}\n                &#9745;\n            </If>\n            <button\n                className=\"mod-danger\"\n                onClick={e => t.popup({\n                    type: \"confirm\",\n                    title: \"Delete session?\",\n                    message: \"Are you sure you want to delete this session?\",\n                    confirmText: \"Yes\",\n                    onConfirm: async tp => {\n                        const sessions = await getWorkSessions(t);\n                        const index = sessions.findIndex(s => areDatesEqual(s.startDate, session.startDate));\n\n                        if (index >= 0) {\n                            sessions.splice(index, 1);\n                            await setWorkSessions(t, sessions);\n                        }\n\n                        props.onRefresh?.();\n\n                        await tp.closePopup();\n                    },\n                    cancelText: \"No\",\n                    onCancel: tp => tp.closePopup(),\n                    mouseEvent: e.nativeEvent,\n                })}\n            >\n                X\n            </button>\n        </div>\n    );\n}\n","import React, { useState } from \"react\";\n\nimport \"./WorkSessions.scss\";\nimport { useProvidedTrello } from \"../hooks/useProvidedTrello\";\nimport { useWorkSessions } from \"../hooks/useWorkSessions\";\nimport { Choose, If, Otherwise, When } from \"../jk/types/jsxControlStatements\";\nimport { WorkSessionItem } from \"./WorkSessionItem\";\n\ntype Props = {\n    className?: string;\n}\n\nexport function WorkSessions(props: Props) {\n    const t = useProvidedTrello();\n    const workSessions = useWorkSessions(t);\n    const [showAll, setShowAll] = useState(false);\n\n    const length = workSessions.data?.length ?? 0;\n\n    return (\n        <div className={`work-sessions ${props.className}`}>\n            <If condition={length > 0}>\n                <div>\n                    Work sessions:\n                    {\"   \"}\n                    <If condition={length > 1}>\n                        <span\n                            className='link-like'\n                            onClick={() => setShowAll(current => !current)}\n                        >\n                            {!showAll ? \"show all\" : \"hide older\"}\n                        </span>\n                    </If>\n                </div>\n            </If>\n            <div className='work-sessions-list'>\n                <Choose>\n                    <When condition={workSessions.data === undefined}>\n                        <p>Loading...</p>\n                    </When>\n                    <Otherwise>\n                        <Choose>\n                            <When condition={showAll}>\n                                {workSessions.data!.map(session => (\n                                    <WorkSessionItem\n                                        key={session.startDate.toISOString()}\n                                        session={session}\n                                        onRefresh={workSessions.refetch}\n                                    />\n                                ))}\n                            </When>\n                            <Otherwise>\n                                <If condition={length > 0}>\n                                    <WorkSessionItem\n                                        session={workSessions.data![workSessions.data!.length - 1]}\n                                        onRefresh={workSessions.refetch}\n                                    />\n                                </If>\n                            </Otherwise>\n                        </Choose>\n                    </Otherwise>\n                </Choose>\n            </div>\n        </div>\n    );\n}\n","import React, { useState } from \"react\";\nimport { editCurrentWorkSession } from \"../api/estimateApi\";\nimport { useProvidedTrello } from \"../hooks/useProvidedTrello\";\nimport { useWorkSessions } from \"../hooks/useWorkSessions\";\n\ntype Props = {\n    className?: string;\n}\n\nexport function EndWorkSessionButton(props: Props) {\n    const t = useProvidedTrello();\n    const sessions = useWorkSessions(t);\n    const [isLoading, setIsLoading] = useState(false);\n\n    if (sessions.data === undefined\n        || sessions.data.length === 0\n        || sessions.data[sessions.data.length - 1].endDate !== undefined\n    )\n        return null;\n\n    return (\n        <button\n            className={`end-work-session mod-danger ${props.className}`}\n            onClick={async () => {\n                if (isLoading)\n                    return;\n\n                setIsLoading(true);\n                await editCurrentWorkSession(t, async current => ({\n                    ...current,\n                    endDate: new Date(),\n                }));\n                await sessions.refetch();\n                setIsLoading(false);\n            }}\n        >\n            {!isLoading ? \"End session\" : \"...\"}\n        </button>\n    );\n}\n","import { useCallback, useMemo, useState } from \"react\";\r\nimport { useQuery, useQueryClient } from \"react-query\";\r\n\r\nimport { getMarginMultiplier, setMaringMultiplier } from \"../api/estimateApi\";\r\nimport { Trello } from \"../types/trello\";\r\nimport { useTrelloRender } from \"./useTrelloRender\";\r\n\r\nconst queryKey = \"margin\";\r\n\r\nexport function useMarginMulitplierQuery(t: Trello.PowerUp.IFrame) {\r\n    return useQuery(\r\n        queryKey,\r\n        () => getMarginMultiplier(t),\r\n        { staleTime: 100 },\r\n    );\r\n}\r\n\r\nexport function useMarginMultiplier(t: Trello.PowerUp.IFrame) {\r\n    const query = useMarginMulitplierQuery(t);\r\n    const queryClient = useQueryClient();\r\n\r\n    useTrelloRender(t, query.refetch);\r\n\r\n    const set = useCallback(\r\n        async (updatedMargin: number) => {\r\n            await setMaringMultiplier(t, updatedMargin);\r\n            queryClient.setQueryData(queryKey, updatedMargin);\r\n        },\r\n        [queryClient],\r\n    );\r\n\r\n    return useMemo(\r\n        () => ({\r\n            value: query.data ?? 0,\r\n            set,\r\n        }),\r\n        [query.data, set],\r\n    );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { SummaryEstimate } from \"../api/estimateApi\";\r\nimport { useMarginMultiplier } from \"../hooks/useMarginMultiplier\";\r\nimport { useProvidedTrello } from \"../hooks/useProvidedTrello\";\r\nimport { formatMinutes } from \"../utils/timeParsing\";\r\n\r\nimport \"./MarginInput.scss\";\r\nimport { useElapsingSummary } from \"../hooks/useElapsingSummary\";\r\n\r\ntype Props = {\r\n    className?: string;\r\n    summary: SummaryEstimate,\r\n}\r\n\r\nexport function MarginInput(props: Props) {\r\n    const t = useProvidedTrello();\r\n    const [input, setInput] = useState(\"\");\r\n\r\n    const margin = useMarginMultiplier(t);\r\n\r\n    useEffect(\r\n        () => setInput(margin.value.toString()),\r\n        [margin.value],\r\n    );\r\n\r\n    const elapsingSummary = useElapsingSummary(props.summary);\r\n\r\n    const marginMinutes = margin.value > 0\r\n        ? margin.value * props.summary.estimateMinutes\r\n        : 0\r\n        ;\r\n\r\n    const usedMargin = marginMinutes > 0 && elapsingSummary.deltaMinutes < 0\r\n        ? Math.min(- elapsingSummary.deltaMinutes, marginMinutes)\r\n        : 0\r\n        ;\r\n\r\n    return (\r\n        <div className={`margin-input ${props.className ?? \"\"}`}>\r\n            <input\r\n                type=\"number\"\r\n                step={0.1}\r\n                value={input}\r\n                onChange={e => setInput(e.target.value)}\r\n                placeholder='insert margin multiplier...'\r\n            />\r\n            <button\r\n                onClick={() => {\r\n                    const parsed = parseFloat(input);\r\n                    if (parsed > 0)\r\n                        margin.set(parsed);\r\n                }}\r\n            >\r\n                Set Margin\r\n            </button>\r\n            <div>\r\n                Margin: {formatMinutes(marginMinutes)}\r\n                {\" \"} Used: {formatMinutes(usedMargin)}\r\n                {\" \"} Left: {formatMinutes(marginMinutes - usedMargin)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\n\nimport \"./BoardSummaryPage.scss\";\nimport { emptySummary, getBoardEstimates, SummaryEstimate } from \"../api/estimateApi\";\nimport { exportEstimatesForMail, exportEstimatesToTsv, exportToFile } from \"../utils/export\";\nimport { useProvidedTrello } from \"../hooks/useProvidedTrello\";\nimport { useWorkSessions } from \"../hooks/useWorkSessions\";\nimport { WorkButton } from \"../components/WorkButton\";\nimport { WorkSessions } from \"../components/WorkSessions\";\nimport { EndWorkSessionButton } from \"../components/EndWorkSessionButton\";\nimport { DeployInfo } from \"../components/DeployInfo\";\nimport { useTrelloRender } from \"../hooks/useTrelloRender\";\nimport { If } from \"../jk/types/jsxControlStatements\";\nimport { useMarginMultiplier } from \"../hooks/useMarginMultiplier\";\nimport { MarginInput } from \"../components/MarginInput\";\nimport { formatDate } from \"../utils/dateFormatting\";\nimport { useLastInputTime } from \"../hooks/useLastInputTime\";\nimport { SummaryDetail } from \"../components/SummaryDetail\";\n\nexport default function BoardSummaryPage() {\n    const t = useProvidedTrello();\n    const [summary, setSummary] = useState<SummaryEstimate>(emptySummary);\n    const margin = useMarginMultiplier(t);\n    const workSessions = useWorkSessions(t);\n    const lastInputTime = useLastInputTime();\n\n    useTrelloRender(t, async () => {\n        const fetched = await getBoardEstimates(t);\n        setSummary(fetched);\n    });\n\n    return (\n        <div className='summary'>\n            <SummaryDetail\n                className=\"section\"\n                summary={summary}\n                margin={margin.value}\n            />\n\n            <MarginInput\n                className=\"section\"\n                summary={summary}\n            />\n\n            <div className=\"section work\">\n                <WorkSessions />\n                <div className=\"buttons\">\n                    <EndWorkSessionButton />\n                    <WorkButton onEstimateChanged={() => workSessions.refetch()} />\n                </div>\n            </div>\n            <If condition={lastInputTime}>\n                <div>\n                    Last activity: {formatDate(lastInputTime!, \"yyyy-MM-dd hh:mm:ss\")}\n                </div>\n            </If>\n            <div className='export-section'>\n                <div className='export-inputs'>\n                    <button\n                        className='mod-primary'\n                        onClick={async () => exportToFile(\n                            await exportEstimatesToTsv(t, margin.value),\n                            \"estimate.tsv\",\n                        )}\n                    >\n                        Export estimates\n                    </button>\n                    <button\n                        className='mod-primary'\n                        onClick={async () => exportToFile(\n                            await exportEstimatesForMail(t, margin.value),\n                            \"estimate.txt\",\n                        )}\n                    >\n                        Export mail\n                    </button>\n                </div>\n            </div>\n            <DeployInfo className=\"deploy-info\" />\n        </div>\n    );\n}\n","import { useState } from \"react\";\r\nimport { getLastInputTime } from \"../api/estimateApi\";\r\nimport { useProvidedTrello } from \"./useProvidedTrello\";\r\nimport { useTrelloRender } from \"./useTrelloRender\";\r\n\r\nexport function useLastInputTime() {\r\n    const t = useProvidedTrello();\r\n    const [lastInputTime, setLastInputTime] = useState<Date | null>(null);\r\n\r\n    useTrelloRender(t, async () => {\r\n        const fetched = await getLastInputTime(t);\r\n        setLastInputTime(fetched);\r\n    });\r\n\r\n    return lastInputTime;\r\n}\r\n","export type DateFormat =\r\n    \"yyyy-MM-dd\"\r\n    | \"yyyy-MM-dd hh:mm:ss\"\r\n;\r\n\r\nexport function formatDate(date: Date, format: DateFormat = \"yyyy-MM-dd\") {\r\n    return format\r\n        .replaceAll(\"yyyy\", date.getFullYear().toString())\r\n        .replaceAll(\"MM\", (date.getMonth() + 1).toString().padStart(2, \"0\"))\r\n        .replaceAll(\"dd\", date.getDate().toString().padStart(2, \"0\"))\r\n        .replaceAll(\"hh\", date.getHours().toString().padStart(2, \"0\"))\r\n        .replaceAll(\"mm\", date.getMinutes().toString().padStart(2, \"0\"))\r\n        .replaceAll(\"ss\", date.getSeconds().toString().padStart(2, \"0\"));\r\n}\r\n","import { Trello } from \"../types/trello\";\nimport { editCurrentWorkSession, getWorkSessions, setWorkSessions, WorkSession } from \"../api/estimateApi\";\nimport { formatMinutesWithOptions, hoursToMs, msToMinutes } from \"./timeParsing\";\nimport { getElapsedMs } from \"./dateMath\";\n\ntype Options = {\n    hoursPerDay: number,\n    mouseEvent: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n}\n\ntype AskOptions = Options & {\n    action?: () => Promise<void>,\n}\n\ntype EditOptions = Options & {\n    action: (session: WorkSession) => Promise<WorkSession>,\n}\n\nexport async function askToCloseOldSession(t: Trello.PowerUp.IFrame, options: AskOptions): Promise<void> {\n    const sessions = await getWorkSessions(t);\n    const current = sessions[sessions.length - 1];\n\n    if (current === undefined || current.endDate !== undefined)\n        return options.action?.();\n\n    const sessionAgeMs = getElapsedMs(current.startDate);\n\n    if (sessionAgeMs < hoursToMs(options.hoursPerDay * 2))\n        return options.action?.();\n\n    const formattedAge = formatMinutesWithOptions(msToMinutes(sessionAgeMs), {\n        hoursPerDay: 24,\n    });\n\n    return new Promise((resolve, reject) => {\n        t.popup({\n            type: \"confirm\",\n            title: \"Close old session?\",\n            message: `The current session looks old (${formattedAge}), do you want to close it and open a new one to save this work?`,\n            confirmText: \"Yes\",\n            onConfirm: async tp => {\n                current.endDate = new Date();\n                await setWorkSessions(t, sessions);\n                resolve(options.action?.());\n                await tp.closePopup();\n            },\n            cancelText: \"No\",\n            onCancel: tp => {\n                resolve(options.action?.());\n                return tp.closePopup();\n            },\n            mouseEvent: options.mouseEvent.nativeEvent,\n        });\n    });\n}\n\nexport function askToCloseOldSessionAndCreateNew(t: Trello.PowerUp.IFrame, options: AskOptions) {\n    return askToCloseOldSession(t, {\n        hoursPerDay: options.hoursPerDay,\n        mouseEvent: options.mouseEvent,\n        action: async () => {\n            // create the new session\n            await editCurrentWorkSession(t, async session => session);\n\n            options.action?.();\n        },\n    });\n}\n\nexport function closeIfOldAndEditCurrentWorkSession(t: Trello.PowerUp.IFrame, options: EditOptions) {\n    return askToCloseOldSession(t, {\n        action: () => editCurrentWorkSession(t, options.action),\n        hoursPerDay: options.hoursPerDay,\n        mouseEvent: options.mouseEvent,\n    });\n}\n","/*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n*\n* By Eli Grey, http://eligrey.com\n*\n* License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n* source  : http://purl.eligrey.com/github/FileSaver.js\n*/\n\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = typeof window === 'object' && window.window === window\n  ? window : typeof self === 'object' && self.self === self\n  ? self : typeof global === 'object' && global.global === global\n  ? global\n  : this\n\nfunction bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\n  }\n  return blob\n}\n\nfunction download (url, name, opts) {\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\n\nfunction corsEnabled (url) {\n  var xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click (node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\n                          20, false, false, false, false, 0, null)\n    node.dispatchEvent(evt)\n  }\n}\n\n// Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\nvar isMacOSWebView = _global.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent)\n\nvar saveAs = _global.saveAs || (\n  // probably in some web worker\n  (typeof window !== 'object' || window !== _global)\n    ? function saveAs () { /* noop */ }\n\n  // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView\n  : ('download' in HTMLAnchorElement.prototype && !isMacOSWebView)\n  ? function saveAs (blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL\n    var a = document.createElement('a')\n    name = name || blob.name || 'download'\n\n    a.download = name\n    a.rel = 'noopener' // tabnabbing\n\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href)\n          ? download(blob, name, opts)\n          : click(a, a.target = '_blank')\n      } else {\n        click(a)\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob)\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\n      setTimeout(function () { click(a) }, 0)\n    }\n  }\n\n  // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator\n  ? function saveAs (blob, name, opts) {\n    name = name || blob.name || 'download'\n\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts)\n      } else {\n        var a = document.createElement('a')\n        a.href = blob\n        a.target = '_blank'\n        setTimeout(function () { click(a) })\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n    }\n  }\n\n  // Fallback to using FileReader and a popup\n  : function saveAs (blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank')\n    if (popup) {\n      popup.document.title =\n      popup.document.body.innerText = 'downloading...'\n    }\n\n    if (typeof blob === 'string') return download(blob, name, opts)\n\n    var force = blob.type === 'application/octet-stream'\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n\n    if ((isChromeIOS || (force && isSafari) || isMacOSWebView) && typeof FileReader !== 'undefined') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        var url = reader.result\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        if (popup) popup.location.href = url\n        else location = url\n        popup = null // reverse-tabnabbing #460\n      }\n      reader.readAsDataURL(blob)\n    } else {\n      var URL = _global.URL || _global.webkitURL\n      var url = URL.createObjectURL(blob)\n      if (popup) popup.location = url\n      else location.href = url\n      popup = null // reverse-tabnabbing #460\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\n    }\n  }\n)\n\n_global.saveAs = saveAs.saveAs = saveAs\n\nif (typeof module !== 'undefined') {\n  module.exports = saveAs;\n}\n"],"names":["ServedFrom","window","location","host","Version","process","DeployInfo","props","className","SummaryWorkDetails","summary","showWorkDetails","setShowWorkDetails","useState","memberById","useProvidedMemberById","workMinutes","onClick","current","undefined","enumerateWorkSummary","filter","item","minutes","map","member","memberId","fullName","username","formatMinutes","SummaryDetail","useProvidedMember","elapsingSummary","useElapsingSummary","marginMinutes","margin","estimateMinutes","usedMarginMinutes","deltaMinutes","Math","min","remainingMarginMinutes","hasUpdatedEstimate","updatedEstimateMinutes","remainingMinutes","formatWorkDelta","delta","truncateString","str","maxLength","length","substring","WorkButton","t","useProvidedTrello","currentWork","useCurrentWork","elapsedWorkMinutes","useElapsedMinutes","value","startDate","providedCard","useProvidedCard","workCard","useCardById","cardId","useMember","isWorking","isSaving","async","round","getElapsedSeconds","set","estimate","getCardEstimate","setCardEstimate","id","closeIfOldAndEditCurrentWorkSession","action","session","addMinutesToDate","hoursPerDay","mouseEvent","e","onEstimateChanged","Date","askToCloseOldSessionAndCreateNew","formatMinutesWithOptions","zero","name","popup","type","title","message","confirmText","onConfirm","tp","closePopup","cancelText","onCancel","nativeEvent","useCardDueCompletedQuery","queryKey","queryClient","useQueryClient","query","useQuery","card","dueComplete","staleTime","setData","useCallback","data","setQueryData","useMemo","useCardWithFunctions","fields","setCard","refresh","fetched","error","console","warn","noDeps","useTrelloRender","useCard","useEffect","cards","c","render","getCurrentWork","minutesToMs","cacheTime","Infinity","refetchOnMount","refetchOnReconnect","refetchOnWindowFocus","useTrelloRenderWithOptions","refetch","callImmediately","useInit","listener","currentWorkChangedEvent","useCurrentWorkQuery","setIsSaving","setCurrentWork","updated","useElapsedMs","ms","setMs","animationFrameId","canceled","requestAnimationFrame","updateSeconds","getElapsedMs","cancelAnimationFrame","myElapsedWorkMinutes","workMinutesByMember","state","setMember","actualFields","then","res","useMemberById","isLazy","setMemberById","board","obj","m","members","TrelloPowerUp","iframe","appName","appKey","options","effect","getExportableRows","marginPercentage","filtered","getAllCardsEstimates","rows","push","totalEstimateMinutes","exportToFile","contents","filename","log","saveAs","Blob","useWorkSessions","getWorkSessions","useWorkSessionsQuery","WorkSessionItem","currentWorkMinutes","endDate","totalWorkMinutes","formatDate","sessions","index","findIndex","s","areDatesEqual","splice","setWorkSessions","onRefresh","WorkSessions","workSessions","showAll","setShowAll","toISOString","EndWorkSessionButton","isLoading","setIsLoading","editCurrentWorkSession","useMarginMultiplier","getMarginMultiplier","useMarginMulitplierQuery","setMaringMultiplier","updatedMargin","MarginInput","input","setInput","toString","usedMargin","step","onChange","target","placeholder","parsed","parseFloat","BoardSummaryPage","setSummary","emptySummary","lastInputTime","setLastInputTime","getLastInputTime","useLastInputTime","getBoardEstimates","tsv","row","number","exportEstimatesToTsv","mail","exportEstimatesForMail","date","format","replaceAll","getFullYear","getMonth","padStart","getDate","getHours","getMinutes","getSeconds","askToCloseOldSession","sessionAgeMs","hoursToMs","formattedAge","msToMinutes","Promise","resolve","reject","b","a","autoBom","test","d","XMLHttpRequest","open","responseType","onload","g","response","onerror","send","status","dispatchEvent","MouseEvent","document","createEvent","initMouseEvent","f","self","global","navigator","userAgent","HTMLAnchorElement","prototype","h","i","URL","webkitURL","j","createElement","download","rel","href","origin","createObjectURL","setTimeout","revokeObjectURL","msSaveOrOpenBlob","body","innerText","HTMLElement","safari","FileReader","k","onloadend","result","replace","readAsDataURL","l","module","exports"],"sourceRoot":""}