{"version":3,"file":"static/js/576.03443ec0.chunk.js","mappings":"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","sources":["components/ServedFrom.tsx","components/Version.tsx","components/DeployInfo.tsx","components/SummaryDetail.tsx","utils/truncate.ts","components/WorkButton.tsx","hooks/useCard.ts","hooks/useCurrentWork.ts","hooks/useElapsed.ts","hooks/useMember.ts","hooks/useProvidedTrello.ts","hooks/useTrelloRender.ts","jk/hooks/useInit.ts","jk/noDeps.ts","utils/export.ts","hooks/useWorkSessions.ts","components/WorkSessionItem.tsx","components/WorkSessions.tsx","components/EndWorkSessionButton.tsx","hooks/useMarginMultiplier.ts","components/MarginInput.tsx","pages/BoardSummaryPage.tsx","hooks/useLastInputTime.ts","utils/dateFormatting.ts","utils/workSessionsUtils.ts","../node_modules/file-saver/src/FileSaver.js"],"sourcesContent":["import React from \"react\";\n\nexport function ServedFrom() {\n    return (\n        <>\n            Served from: {window.location.host}\n        </>\n    );\n}\n","import React from \"react\";\n\nexport function Version() {\n    return (\n        <>\n            Version: {process.env.REACT_APP_VERSION}\n        </>\n    );\n}\n","import React from \"react\";\n\nimport \"./DeployInfo.scss\";\nimport { ServedFrom } from \"./ServedFrom\";\nimport { Version } from \"./Version\";\n\ntype Props = {\n    className?: string;\n}\n\nexport function DeployInfo(props: Props) {\n    return (\n        <div className={props.className}>\n            <span className=\"deploy-text\">\n                <Version />\n            </span>\n            <span className=\"deploy-text\">\n                <ServedFrom />\n            </span>\n        </div>\n    );\n}\n","import React from \"react\";\n\nimport { SummaryEstimate } from \"../api/estimateApi\";\nimport { useCurrentWork } from \"../hooks/useCurrentWork\";\nimport { useElapsedMinutes } from \"../hooks/useElapsed\";\nimport { If } from \"../jk/types/jsxControlStatements\";\nimport { formatMinutes } from \"../utils/timeParsing\";\nimport { formatWorkDelta } from \"../utils/workDelta\";\n\ntype Props = {\n    className?: string,\n    summary: SummaryEstimate,\n    margin?: number,\n}\n\nexport function SummaryDetail(props: Props) {\n    const summary = props.summary;\n    const currentWork = useCurrentWork();\n    const elapsedWorkMinutes = useElapsedMinutes(currentWork.value?.startDate);\n\n    if (!summary)\n        return null;\n\n    const currentSummary: SummaryEstimate = {\n        estimateMinutes: summary.estimateMinutes,\n        updatedEstimateMinutes: summary.updatedEstimateMinutes,\n        workMinutes: summary.workMinutes + elapsedWorkMinutes,\n        remainingMinutes: summary.remainingMinutes - elapsedWorkMinutes,\n        deltaMinutes: summary.deltaMinutes,\n    };\n\n    const marginMinutes = (props.margin ?? 0) > 0\n        ? props.margin! * summary.estimateMinutes\n        : 0\n    ;\n\n    const usedMarginMinutes = marginMinutes > 0 && currentSummary.deltaMinutes < 0\n        ? Math.min(- currentSummary.deltaMinutes, marginMinutes)\n        : 0\n    ;\n\n    const remainingMarginMinutes = marginMinutes - usedMarginMinutes;\n\n    const hasUpdatedEstimate = currentSummary.updatedEstimateMinutes > 0\n        && currentSummary.updatedEstimateMinutes !== currentSummary.estimateMinutes\n    ;\n\n    return (\n        <div className={props.className}>\n            <div>\n                {hasUpdatedEstimate && \"Original \"}\n                    Estimate: {formatMinutes(currentSummary.estimateMinutes + marginMinutes)}\n                <If condition={marginMinutes > 0}>\n                    {\" \"} (without margin: {formatMinutes(currentSummary.estimateMinutes)})\n                </If>\n            </div>\n            <If condition={hasUpdatedEstimate}>\n                <div>\n                    Updated Estimate: {formatMinutes(currentSummary.updatedEstimateMinutes + remainingMarginMinutes)}\n                </div>\n            </If>\n            <div>\n                Work: {formatMinutes(currentSummary.workMinutes)}\n            </div>\n            <div>\n                Remaining: {formatMinutes(currentSummary.remainingMinutes + remainingMarginMinutes)}\n                <If condition={marginMinutes > 0 && remainingMarginMinutes > 0}>\n                    {\" \"} (without margin: {formatMinutes(currentSummary.remainingMinutes)})\n                </If>\n                <If condition={remainingMarginMinutes === 0}>\n                    {\" \"} (no margin left)\n                </If>\n            </div>\n            <div>\n                {formatWorkDelta({\n                    delta: summary.deltaMinutes >= 0\n                        ? summary.deltaMinutes\n                        : summary.deltaMinutes + Math.min(-summary.deltaMinutes, remainingMarginMinutes),\n                })}\n                <If condition={usedMarginMinutes > 0}>\n                    <If condition={remainingMarginMinutes > 0}>\n                        {\" \"} (without margin {formatWorkDelta({ delta: summary.deltaMinutes })})\n                    </If>\n                    <If condition={remainingMarginMinutes === 0}>\n                        {\" \"} (no margin left)\n                    </If>\n                </If>\n            </div>\n        </div>\n    );\n}\n","\nexport function truncateString(str: string, maxLength = 10) {\n    if (str.length < maxLength)\n        return str;\n    else\n        return str.substring(0, maxLength - 3) + \"...\";\n}\n","import React from \"react\";\n\nimport \"./WorkButton.scss\";\nimport { useCurrentWork } from \"../hooks/useCurrentWork\";\nimport { useCardById, useProvidedCard } from \"../hooks/useCard\";\nimport { getCardEstimate, setCardEstimate } from \"../api/estimateApi\";\nimport { useElapsedMinutes } from \"../hooks/useElapsed\";\nimport { formatMinutesWithOptions, hoursPerDay } from \"../utils/timeParsing\";\nimport { truncateString } from \"../utils/truncate\";\nimport { useProvidedTrello } from \"../hooks/useProvidedTrello\";\nimport { useMember } from \"../hooks/useMember\";\nimport { addMinutesToDate, getElapsedSeconds } from \"../utils/dateMath\";\nimport { askToCloseOldSessionAndCreateNew, closeIfOldAndEditCurrentWorkSession } from \"../utils/workSessionsUtils\";\nimport { If } from \"../jk/types/jsxControlStatements\";\n\ntype Props = {\n    onEstimateChanged?: () => void;\n}\n\nexport function WorkButton(props: Props) {\n    const t = useProvidedTrello();\n    const currentWork = useCurrentWork();\n    const elapsedWorkMinutes = useElapsedMinutes(currentWork.value?.startDate);\n    const providedCard = useProvidedCard(\"id\");\n    const workCard = useCardById(t, currentWork.value?.cardId, \"id\", \"name\");\n    const member = useMember(t, \"id\");\n\n    const isWorking = currentWork.value?.cardId !== undefined && !currentWork.isSaving;\n\n    if (!providedCard && !isWorking)\n        return null;\n\n    return (\n        <div className=\"work-button-wrapper\">\n            <button\n                className={`work-button ${!isWorking ? \"mod-primary\" : \"mod-danger\"}`}\n                onClick={async e => {\n                    if (member === undefined)\n                        return;\n\n                    if (!isWorking && providedCard !== undefined) {\n                        currentWork.set({\n                            cardId: providedCard.id,\n                            startDate: new Date(),\n                        });\n\n                        askToCloseOldSessionAndCreateNew(t, {\n                            hoursPerDay,\n                            mouseEvent: e,\n                        });\n                    }\n                    else if (isWorking) {\n                        const seconds = Math.round(getElapsedSeconds(currentWork.value!.startDate));\n                        const minutes = seconds / 60;\n\n                        currentWork.set(null);\n\n                        const estimate = await getCardEstimate(t, currentWork.value!.cardId);\n                        await setCardEstimate(\n                            t,\n                            {\n                                ...estimate,\n                                workMinutes: {\n                                    ...estimate.workMinutes,\n                                    [member.id]: (estimate.workMinutes[member.id] ?? 0) + minutes,\n                                },\n                            },\n                            currentWork.value!.cardId,\n                        );\n\n                        await closeIfOldAndEditCurrentWorkSession(t, {\n                            action: async session => {\n                                if (session.workMinutes === 0)\n                                    session.startDate = addMinutesToDate(session.startDate, -minutes);\n                                session.workMinutes += minutes;\n                                return session;\n                            },\n                            hoursPerDay,\n                            mouseEvent: e,\n                        });\n\n                        props.onEstimateChanged?.();\n                    }\n                }}\n            >\n                <If condition={currentWork.isSaving}>\n                ...\n                </If>\n                <If condition={!currentWork.isSaving}>\n                    {!isWorking ? \"Start work\" : \"End work\"}\n                    <If condition={isWorking}>\n                        {\" \" + formatMinutesWithOptions(elapsedWorkMinutes, { zero: \"\" })}\n                    </If>\n                    <If condition={isWorking && providedCard?.id !== currentWork.value?.cardId}>\n                        {` (on${providedCard ? \" other\" : \"\"} card${workCard === undefined ? \"\" : `: \"${truncateString(workCard.name, 8)}\"`})`}\n                    </If>\n                </If>\n            </button>\n            <If condition={isWorking}>\n                <button\n                    className=\"cancel-work-button\"\n                    onClick={e => t.popup({\n                        type: \"confirm\",\n                        title: \"Cancel work?\",\n                        message: \"Are you sure you want to cancel the work in progress?\",\n                        confirmText: \"Yes\",\n                        onConfirm: tp => {\n                            currentWork.set(null);\n                            return tp.closePopup();\n                        },\n                        cancelText: \"No\",\n                        onCancel: tp => tp.closePopup(),\n                        mouseEvent: e.nativeEvent,\n                    })}\n                >\n                    X\n                </button>\n            </If>\n        </div>\n    );\n}\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { useQuery, useQueryClient } from \"react-query\";\n\nimport { Trello } from \"../types/trello\";\nimport { noDeps } from \"../jk/noDeps\";\nimport { useProvidedTrello } from \"./useProvidedTrello\";\nimport { useTrelloRender } from \"./useTrelloRender\";\n\nexport function useCardDueCompletedQuery(t: Trello.PowerUp.IFrame) {\n    const queryKey = \"card\";\n    const queryClient = useQueryClient();\n\n    const query = useQuery(\n        queryKey,\n        async () => {\n            const card = await t.card(\"dueComplete\");\n            return card.dueComplete;\n        },\n        { staleTime: 1000 },\n    );\n\n    const setData = useCallback(\n        (data: boolean) => queryClient.setQueryData(queryKey, data),\n        [queryClient],\n    );\n\n    return useMemo(\n        () => ({\n            ...query,\n            setData,\n        }),\n        [query, setData],\n    );\n}\n\nexport function useCardWithFunctions(t: Trello.PowerUp.IFrame, ...fields: (keyof Trello.PowerUp.Card)[]) {\n    const [card, setCard] = useState<Trello.PowerUp.Card>();\n\n    const refresh = useCallback(\n        async () => {\n            let fetched: Trello.PowerUp.Card;\n\n            try {\n                fetched = await t.card(...fields);\n            }\n            catch (error) {\n                console.warn(\"no card in context\");\n                return;\n            }\n\n            // console.log(\"refreshed card complete\", fetched.dueComplete);\n\n            setCard(fetched);\n        },\n        noDeps,\n    );\n\n    useTrelloRender(t, refresh);\n\n    return useMemo(\n        () => ({\n            card,\n            refresh,\n            setCard,\n        }),\n        [card],\n    );\n}\n\nexport function useCard(t: Trello.PowerUp.IFrame, ...fields: (keyof Trello.PowerUp.Card)[]) {\n    const { card } = useCardWithFunctions(t, ...fields);\n    return card;\n}\n\nexport function useProvidedCard(...fields: (keyof Trello.PowerUp.Card)[]) {\n    const t = useProvidedTrello();\n    return useCard(t, ...fields);\n}\n\nexport function useCardById(t: Trello.PowerUp.IFrame, cardId: string | undefined, ...fields: (keyof Trello.PowerUp.Card)[]) {\n    const [card, setCard] = useState<Trello.PowerUp.Card>();\n\n    useEffect(\n        () => {\n            async function refresh() {\n                if (cardId === undefined)\n                    return;\n\n                const cards = await t.cards(...fields);\n                for (const c of cards) {\n                    if (c.id === cardId) {\n                        setCard(c);\n                        break;\n                    }\n                }\n            }\n            refresh();\n            t.render(refresh);\n        },\n        [cardId],\n    );\n\n    return card;\n}\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { useQuery, useQueryClient } from \"react-query\";\n\nimport { CurrentWork, getCurrentWork, setCurrentWork } from \"../api/estimateApi\";\nimport { currentWorkChangedEvent } from \"../api/events/apiEvents\";\nimport { useInit } from \"../jk/hooks/useInit\";\nimport { Trello } from \"../types/trello\";\nimport { minutesToMs } from \"../utils/timeParsing\";\nimport { useProvidedTrello } from \"./useProvidedTrello\";\nimport { useTrelloRenderWithOptions } from \"./useTrelloRender\";\n\nconst queryKey = \"current_work\";\n\nexport function useCurrentWorkQuery(t: Trello.PowerUp.IFrame) {\n    // N.B. la query sembra che non venga cachata, penso che il motivo sia che\n    // ogni volta che viene aperta una scheda viene avviata una nuova\n    // istanza di react\n    const query = useQuery(\n        queryKey,\n        () => getCurrentWork(t),\n        {\n            staleTime: minutesToMs(2),\n            cacheTime: Infinity,\n            refetchOnMount: false,\n            refetchOnReconnect: false,\n            refetchOnWindowFocus: false,\n        },\n    );\n\n    useTrelloRenderWithOptions(t, {\n        refresh: query.refetch,\n        callImmediately: false,\n    });\n\n    useInit(() => {\n        const listener = currentWorkChangedEvent.on(query.refetch as any);\n        return () => currentWorkChangedEvent.off(listener) as any;\n    });\n\n    return query;\n}\n\nexport function useCurrentWork() {\n    const t = useProvidedTrello();\n    const queryClient = useQueryClient();\n    const query = useCurrentWorkQuery(t);\n    const [isSaving, setIsSaving] = useState(false);\n\n    // console.log(\"query stale: \" + query.isStale);\n\n    const set = useCallback(\n        async (updated: CurrentWork | null) => {\n            setIsSaving(true);\n            await setCurrentWork(t, updated);\n            // console.log(\"setting query data\");\n            queryClient.setQueryData(queryKey, updated);\n            setIsSaving(false);\n        },\n        [t, queryClient],\n    );\n\n    return useMemo(\n        () => ({\n            value: query.data,\n            isSaving,\n            set,\n        }),\n        [query.data, isSaving, set],\n    );\n}\n","import { useEffect, useState } from \"react\";\nimport { getElapsedMs } from \"../utils/dateMath\";\n\nexport function useElapsedMinutes(startDate: Date | undefined) {\n    return useElapsedMs(startDate) / 1000 / 60;\n}\n\nexport function useElapsedSeconds(startDate: Date | undefined) {\n    return useElapsedMs(startDate) / 1000;\n}\n\nexport function useElapsedMs(startDate: Date | undefined) {\n    const [ms, setMs] = useState(0);\n\n    useEffect(\n        () => {\n            if (startDate === undefined) {\n                setMs(0);\n                return;\n            }\n\n            let animationFrameId: number;\n            let canceled = false;\n\n            function updateSeconds() {\n                setMs(getElapsedMs(startDate!));\n\n                if (!canceled)\n                    animationFrameId = requestAnimationFrame(updateSeconds);\n            }\n\n            animationFrameId = requestAnimationFrame(updateSeconds);\n\n            return () => {\n                canceled = true;\n                cancelAnimationFrame(animationFrameId);\n            };\n        },\n        [startDate],\n    );\n\n    return ms;\n}\n","import { useEffect, useState } from \"react\";\n\nimport { Trello } from \"../types/trello\";\nimport { useProvidedTrello } from \"./useProvidedTrello\";\n\nexport function useMember(t: Trello.PowerUp.IFrame, ...fields: [\"all\"] | Trello.PowerUp.MemberFields[]) {\n    const state = useState<Trello.PowerUp.Member>();\n    const [member, setMember] = state;\n\n    useEffect(\n        () => {\n            const actualFields = fields !== undefined && fields.length > 0\n                ? fields\n                : [\"id\"] as Trello.PowerUp.MemberFields[];\n            t.member(...actualFields).then(res => setMember(res));\n        },\n        [t],\n    );\n\n    return member;\n}\n\nexport function useProvidedMember(...fields: [\"all\"] | Trello.PowerUp.MemberFields[]) {\n    const t = useProvidedTrello();\n    return useMember(t, ...fields);\n}\n","import { Trello } from \"../types/trello\";\n\nlet t: Trello.PowerUp.IFrame;\n\nexport function useProvidedTrello() {\n    if (t === undefined) {\n        t = window.TrelloPowerUp.iframe({\n            appName: process.env.REACT_APP_POWERUP_NAME,\n            appKey: process.env.REACT_APP_POWERUP_APP_KEY,\n        });\n    }\n\n    return t;\n}\n","import { Trello } from \"../types/trello\";\nimport { useInit } from \"../jk/hooks/useInit\";\nimport { useProvidedTrello } from \"./useProvidedTrello\";\n\nexport type TrelloRenderOptions = {\n    refresh: () => void;\n    callImmediately?: boolean;\n}\n\nexport function useTrelloRenderWithOptions(t: Trello.PowerUp.IFrame, options: TrelloRenderOptions) {\n    useInit(() => {\n        if (options.callImmediately)\n            options.refresh();\n        t.render(options.refresh);\n    });\n}\n\nexport function useTrelloRender(t: Trello.PowerUp.IFrame, refresh: () => void) {\n    return useTrelloRenderWithOptions(t, {\n        refresh,\n        callImmediately: true,\n    });\n}\n\nexport function useProvidedTrelloRender(refresh: () => void) {\n    const t = useProvidedTrello();\n    return useTrelloRender(t, refresh);\n}\n","import React, { useEffect } from \"react\";\nimport { noDeps } from \"../noDeps\";\n\nexport function useInit(effect: React.EffectCallback) {\n    return useEffect(effect, noDeps);\n}\n","export const noDeps = [];\n","import saveAs from \"file-saver\";\nimport { getAllCardsEstimates } from \"../api/estimateApi\";\nimport { Trello } from \"../types/trello\";\nimport { formatMinutes } from \"./timeParsing\";\n\nfunction roundTo2Decimals(number: number) {\n    return Math.round(number * 100)/100;\n}\n\ntype Row = {\n    name: string;\n    minutes: number;\n}\n\nexport async function getExportableRows(t: Trello.PowerUp.IFrame, marginPercentage: number) {\n    const estimates = await getAllCardsEstimates(t, \"id\", \"name\");\n    const filtered = estimates.filter(e => e.estimateMinutes > 0);\n\n    const rows: Row[] = [];\n\n    for (const estimate of filtered) {\n        rows.push({\n            name: estimate.card.name,\n            minutes: estimate.estimateMinutes,\n        });\n    }\n\n    let totalEstimateMinutes = 0;\n\n    for (const estimate of filtered)\n        totalEstimateMinutes += estimate.estimateMinutes;\n\n    if (marginPercentage > 0) {\n        const margin = totalEstimateMinutes * marginPercentage;\n        rows.push({\n            name: \"margin\",\n            minutes: margin,\n        });\n\n        totalEstimateMinutes += margin;\n    }\n\n    rows.push({\n        name: \"total\",\n        minutes: totalEstimateMinutes,\n    });\n\n    return rows;\n}\n\nexport async function exportEstimatesToTsv(t: Trello.PowerUp.IFrame, marginPercentage: number) {\n    const rows = await getExportableRows(t, marginPercentage);\n\n    let tsv = \"Task\\tHours\";\n\n    for (const row of rows)\n        tsv += \"\\n\" + row.name + \"\\t\" + roundTo2Decimals(row.minutes/60);\n\n    return tsv;\n}\n\nexport async function exportEstimatesForMail(t: Trello.PowerUp.IFrame, marginPercentage: number) {\n    const rows = await getExportableRows(t, marginPercentage);\n\n    let mail = \"\";\n\n    for (const row of rows)\n        mail += row.name + \"  \" + formatMinutes(row.minutes) + \"\\n\";\n\n    return mail;\n}\n\nexport async function exportToFile(contents: string, filename: string) {\n    console.log(contents);\n    saveAs(\n        new Blob([contents], { type: \"text/plain;charset=utf-8\" }),\n        filename,\n    );\n}\n","import { useQuery, useQueryClient } from \"react-query\";\n\nimport { getWorkSessions } from \"../api/estimateApi\";\nimport { Trello } from \"../types/trello\";\nimport { useTrelloRenderWithOptions } from \"./useTrelloRender\";\n\nconst queryKey = \"work_sessions\";\n\nexport function useWorkSessionsQuery(t: Trello.PowerUp.IFrame) {\n    return useQuery(\n        queryKey,\n        () => getWorkSessions(t),\n        {\n            staleTime: 5 * 1000,\n        },\n    );\n}\n\nexport function useWorkSessions(t: Trello.PowerUp.IFrame) {\n    const queryClient = useQueryClient();\n    const query = useWorkSessionsQuery(t);\n\n    useTrelloRenderWithOptions(t, {\n        refresh: () => queryClient.setQueryData(queryKey, undefined),\n        callImmediately: false,\n    });\n\n    return query;\n}\n","import React from \"react\";\n\nimport \"./WorkSessionItem.scss\";\nimport { getWorkSessions, setWorkSessions, WorkSession } from \"../api/estimateApi\";\nimport { useCurrentWork } from \"../hooks/useCurrentWork\";\nimport { useElapsedMinutes } from \"../hooks/useElapsed\";\nimport { If } from \"../jk/types/jsxControlStatements\";\nimport { formatMinutes } from \"../utils/timeParsing\";\nimport { useProvidedTrello } from \"../hooks/useProvidedTrello\";\nimport { areDatesEqual } from \"../utils/dateMath\";\nimport { formatDate } from \"../utils/dateFormatting\";\n\ntype Props = {\n    className?: string;\n    session: WorkSession;\n    onRefresh?: () => void;\n}\n\nexport function WorkSessionItem(props: Props) {\n    const t = useProvidedTrello();\n    const session = props.session;\n\n    const currentWork = useCurrentWork();\n    const currentWorkMinutes = useElapsedMinutes(\n        session.endDate === undefined\n            ? currentWork.value?.startDate\n            : undefined,\n    );\n\n    const totalWorkMinutes = session.workMinutes + currentWorkMinutes;\n\n    return (\n        <div className={`work-session ${props.className}`}>\n            Start: {formatDate(session.startDate)}\n            {\" | \"}\n            Work: {formatMinutes(totalWorkMinutes)}\n            <If condition={session.endDate !== undefined}>\n                {\" | \"}\n                &#9745;\n            </If>\n            <button\n                className=\"mod-danger\"\n                onClick={e => t.popup({\n                    type: \"confirm\",\n                    title: \"Delete session?\",\n                    message: \"Are you sure you want to delete this session?\",\n                    confirmText: \"Yes\",\n                    onConfirm: async tp => {\n                        const sessions = await getWorkSessions(t);\n                        const index = sessions.findIndex(s => areDatesEqual(s.startDate, session.startDate));\n\n                        if (index >= 0) {\n                            sessions.splice(index, 1);\n                            await setWorkSessions(t, sessions);\n                        }\n\n                        props.onRefresh?.();\n\n                        await tp.closePopup();\n                    },\n                    cancelText: \"No\",\n                    onCancel: tp => tp.closePopup(),\n                    mouseEvent: e.nativeEvent,\n                })}\n            >\n                X\n            </button>\n        </div>\n    );\n}\n","import React, { useState } from \"react\";\n\nimport \"./WorkSessions.scss\";\nimport { useProvidedTrello } from \"../hooks/useProvidedTrello\";\nimport { useWorkSessions } from \"../hooks/useWorkSessions\";\nimport { Choose, If, Otherwise, When } from \"../jk/types/jsxControlStatements\";\nimport { WorkSessionItem } from \"./WorkSessionItem\";\n\ntype Props = {\n    className?: string;\n}\n\nexport function WorkSessions(props: Props) {\n    const t = useProvidedTrello();\n    const workSessions = useWorkSessions(t);\n    const [showAll, setShowAll] = useState(false);\n\n    const length = workSessions.data?.length ?? 0;\n\n    return (\n        <div className={`work-sessions ${props.className}`}>\n            <If condition={length > 0}>\n                <div>\n                    Work sessions:\n                    {\"   \"}\n                    <If condition={length > 1}>\n                        <span\n                            className='link-like'\n                            onClick={() => setShowAll(current => !current)}\n                        >\n                            {!showAll ? \"show all\" : \"hide older\"}\n                        </span>\n                    </If>\n                </div>\n            </If>\n            <div className='work-sessions-list'>\n                <Choose>\n                    <When condition={workSessions.data === undefined}>\n                        <p>Loading...</p>\n                    </When>\n                    <Otherwise>\n                        <Choose>\n                            <When condition={showAll}>\n                                {workSessions.data!.map(session => (\n                                    <WorkSessionItem\n                                        key={session.startDate.toISOString()}\n                                        session={session}\n                                        onRefresh={workSessions.refetch}\n                                    />\n                                ))}\n                            </When>\n                            <Otherwise>\n                                <If condition={length > 0}>\n                                    <WorkSessionItem\n                                        session={workSessions.data![workSessions.data!.length - 1]}\n                                        onRefresh={workSessions.refetch}\n                                    />\n                                </If>\n                            </Otherwise>\n                        </Choose>\n                    </Otherwise>\n                </Choose>\n            </div>\n        </div>\n    );\n}\n","import React, { useState } from \"react\";\nimport { editCurrentWorkSession } from \"../api/estimateApi\";\nimport { useProvidedTrello } from \"../hooks/useProvidedTrello\";\nimport { useWorkSessions } from \"../hooks/useWorkSessions\";\n\ntype Props = {\n    className?: string;\n}\n\nexport function EndWorkSessionButton(props: Props) {\n    const t = useProvidedTrello();\n    const sessions = useWorkSessions(t);\n    const [isLoading, setIsLoading] = useState(false);\n\n    if (sessions.data === undefined\n        || sessions.data.length === 0\n        || sessions.data[sessions.data.length - 1].endDate !== undefined\n    )\n        return null;\n\n    return (\n        <button\n            className={`end-work-session mod-danger ${props.className}`}\n            onClick={async () => {\n                if (isLoading)\n                    return;\n\n                setIsLoading(true);\n                await editCurrentWorkSession(t, async current => ({\n                    ...current,\n                    endDate: new Date(),\n                }));\n                await sessions.refetch();\n                setIsLoading(false);\n            }}\n        >\n            {!isLoading ? \"End session\" : \"...\"}\n        </button>\n    );\n}\n","import { useCallback, useMemo, useState } from \"react\";\r\nimport { useQuery, useQueryClient } from \"react-query\";\r\n\r\nimport { getMarginMultiplier, setMaringMultiplier } from \"../api/estimateApi\";\r\nimport { Trello } from \"../types/trello\";\r\nimport { useTrelloRender } from \"./useTrelloRender\";\r\n\r\nconst queryKey = \"margin\";\r\n\r\nexport function useMarginMulitplierQuery(t: Trello.PowerUp.IFrame) {\r\n    return useQuery(\r\n        queryKey,\r\n        () => getMarginMultiplier(t),\r\n        { staleTime: 100 },\r\n    );\r\n}\r\n\r\nexport function useMarginMultiplier(t: Trello.PowerUp.IFrame) {\r\n    const query = useMarginMulitplierQuery(t);\r\n    const queryClient = useQueryClient();\r\n\r\n    useTrelloRender(t, query.refetch);\r\n\r\n    const set = useCallback(\r\n        async (updatedMargin: number) => {\r\n            await setMaringMultiplier(t, updatedMargin);\r\n            queryClient.setQueryData(queryKey, updatedMargin);\r\n        },\r\n        [queryClient],\r\n    );\r\n\r\n    return useMemo(\r\n        () => ({\r\n            value: query.data ?? 0,\r\n            set,\r\n        }),\r\n        [query.data, set],\r\n    );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { SummaryEstimate } from \"../api/estimateApi\";\r\nimport { useCurrentWork } from \"../hooks/useCurrentWork\";\r\nimport { useElapsedMinutes } from \"../hooks/useElapsed\";\r\nimport { useMarginMultiplier } from \"../hooks/useMarginMultiplier\";\r\nimport { useProvidedTrello } from \"../hooks/useProvidedTrello\";\r\nimport { formatMinutes } from \"../utils/timeParsing\";\r\n\r\nimport \"./MarginInput.scss\";\r\n\r\ntype Props = {\r\n    className?: string;\r\n    summary: SummaryEstimate,\r\n}\r\n\r\nexport function MarginInput(props: Props) {\r\n    const t = useProvidedTrello();\r\n    const [input, setInput] = useState(\"\");\r\n\r\n    const margin = useMarginMultiplier(t);\r\n\r\n    useEffect(\r\n        () => setInput(margin.value.toString()),\r\n        [margin.value],\r\n    );\r\n\r\n    const summary = props.summary;\r\n    const currentWork = useCurrentWork();\r\n    const elapsedWorkMinutes = useElapsedMinutes(currentWork.value?.startDate);\r\n\r\n    if (!summary)\r\n        return null;\r\n\r\n    const currentSummary: SummaryEstimate = {\r\n        estimateMinutes: summary.estimateMinutes,\r\n        updatedEstimateMinutes: summary.updatedEstimateMinutes,\r\n        workMinutes: summary.workMinutes + elapsedWorkMinutes,\r\n        remainingMinutes: summary.remainingMinutes - elapsedWorkMinutes,\r\n        deltaMinutes: summary.deltaMinutes,\r\n    };\r\n\r\n    const marginMinutes = margin.value > 0\r\n        ? margin.value * summary.estimateMinutes\r\n        : 0\r\n    ;\r\n\r\n    const usedMargin = marginMinutes > 0 && currentSummary.deltaMinutes < 0\r\n        ? Math.min(- currentSummary.deltaMinutes, marginMinutes)\r\n        : 0\r\n    ;\r\n\r\n    return (\r\n        <div className={`margin-input ${props.className ?? \"\"}`}>\r\n            <input\r\n                type=\"number\"\r\n                step={0.1}\r\n                value={input}\r\n                onChange={e => setInput(e.target.value)}\r\n                placeholder='insert margin multiplier...'\r\n            />\r\n            <button\r\n                onClick={() => {\r\n                    const parsed = parseFloat(input);\r\n                    if (parsed > 0)\r\n                        margin.set(parsed);\r\n                }}\r\n            >\r\n                Set Margin\r\n            </button>\r\n            <div>\r\n                Margin: {formatMinutes(marginMinutes)}\r\n                {\" \"} Used: {formatMinutes(usedMargin)}\r\n                {\" \"} Left: {formatMinutes(marginMinutes - usedMargin)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\n\nimport \"./BoardSummaryPage.scss\";\nimport { getBoardEstimates, SummaryEstimate } from \"../api/estimateApi\";\nimport { exportEstimatesForMail, exportEstimatesToTsv, exportToFile } from \"../utils/export\";\nimport { useProvidedTrello } from \"../hooks/useProvidedTrello\";\nimport { useWorkSessions } from \"../hooks/useWorkSessions\";\nimport { WorkButton } from \"../components/WorkButton\";\nimport { WorkSessions } from \"../components/WorkSessions\";\nimport { EndWorkSessionButton } from \"../components/EndWorkSessionButton\";\nimport { DeployInfo } from \"../components/DeployInfo\";\nimport { useTrelloRender } from \"../hooks/useTrelloRender\";\nimport { If } from \"../jk/types/jsxControlStatements\";\nimport { useMarginMultiplier } from \"../hooks/useMarginMultiplier\";\nimport { MarginInput } from \"../components/MarginInput\";\nimport { formatDate } from \"../utils/dateFormatting\";\nimport { useLastInputTime } from \"../hooks/useLastInputTime\";\nimport { SummaryDetail } from \"../components/SummaryDetail\";\n\nexport default function BoardSummaryPage() {\n    const t = useProvidedTrello();\n    const [summary, setSummary] = useState<SummaryEstimate>();\n    const margin = useMarginMultiplier(t);\n    const workSessions = useWorkSessions(t);\n    const lastInputTime = useLastInputTime();\n\n    useTrelloRender(t, async () => {\n        const fetched = await getBoardEstimates(t);\n        setSummary(fetched);\n    });\n\n    if (summary === undefined)\n        return (<p>Loading... </p>);\n\n    return (\n        <div className='summary'>\n            <SummaryDetail\n                className=\"section\"\n                summary={summary}\n                margin={margin.value}\n            />\n\n            <MarginInput\n                className=\"section\"\n                summary={summary}\n            />\n\n            <div className=\"section work\">\n                <WorkSessions />\n                <div className=\"buttons\">\n                    <EndWorkSessionButton />\n                    <WorkButton onEstimateChanged={() => workSessions.refetch()} />\n                </div>\n            </div>\n            <If condition={lastInputTime}>\n                <div>\n                    Last activity: {formatDate(lastInputTime!, \"yyyy-MM-dd hh:mm:ss\")}\n                </div>\n            </If>\n            <div className='export-section'>\n                <div className='export-inputs'>\n                    <button\n                        className='mod-primary'\n                        onClick={async () => exportToFile(\n                            await exportEstimatesToTsv(t, margin.value),\n                            \"estimate.tsv\",\n                        )}\n                    >\n                        Export estimates\n                    </button>\n                    <button\n                        className='mod-primary'\n                        onClick={async () => exportToFile(\n                            await exportEstimatesForMail(t, margin.value),\n                            \"estimate.txt\",\n                        )}\n                    >\n                        Export mail\n                    </button>\n                </div>\n            </div>\n            <DeployInfo className=\"deploy-info\" />\n        </div>\n    );\n}\n","import { useState } from \"react\";\r\nimport { getLastInputTime } from \"../api/estimateApi\";\r\nimport { useProvidedTrello } from \"./useProvidedTrello\";\r\nimport { useTrelloRender } from \"./useTrelloRender\";\r\n\r\nexport function useLastInputTime() {\r\n    const t = useProvidedTrello();\r\n    const [lastInputTime, setLastInputTime] = useState<Date | null>(null);\r\n\r\n    useTrelloRender(t, async () => {\r\n        const fetched = await getLastInputTime(t);\r\n        setLastInputTime(fetched);\r\n    });\r\n\r\n    return lastInputTime;\r\n}\r\n","export type DateFormat =\r\n    \"yyyy-MM-dd\"\r\n    | \"yyyy-MM-dd hh:mm:ss\"\r\n;\r\n\r\nexport function formatDate(date: Date, format: DateFormat = \"yyyy-MM-dd\") {\r\n    return format\r\n        .replaceAll(\"yyyy\", date.getFullYear().toString())\r\n        .replaceAll(\"MM\", (date.getMonth() + 1).toString().padStart(2, \"0\"))\r\n        .replaceAll(\"dd\", date.getDate().toString().padStart(2, \"0\"))\r\n        .replaceAll(\"hh\", date.getHours().toString().padStart(2, \"0\"))\r\n        .replaceAll(\"mm\", date.getMinutes().toString().padStart(2, \"0\"))\r\n        .replaceAll(\"ss\", date.getSeconds().toString().padStart(2, \"0\"));\r\n}\r\n","import { Trello } from \"../types/trello\";\nimport { editCurrentWorkSession, getWorkSessions, setWorkSessions, WorkSession } from \"../api/estimateApi\";\nimport { formatMinutesWithOptions, hoursToMs, msToMinutes } from \"./timeParsing\";\nimport { getElapsedMs } from \"./dateMath\";\n\ntype Options = {\n    hoursPerDay: number,\n    mouseEvent: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n}\n\ntype AskOptions = Options & {\n    action?: () => Promise<void>,\n}\n\ntype EditOptions = Options & {\n    action: (session: WorkSession) => Promise<WorkSession>,\n}\n\nexport async function askToCloseOldSession(t: Trello.PowerUp.IFrame, options: AskOptions): Promise<void> {\n    const sessions = await getWorkSessions(t);\n    const current = sessions[sessions.length - 1];\n\n    if (current === undefined || current.endDate !== undefined)\n        return options.action?.();\n\n    const sessionAgeMs = getElapsedMs(current.startDate);\n\n    if (sessionAgeMs < hoursToMs(options.hoursPerDay * 2))\n        return options.action?.();\n\n    const formattedAge = formatMinutesWithOptions(msToMinutes(sessionAgeMs), {\n        hoursPerDay: 24,\n    });\n\n    return new Promise((resolve, reject) => {\n        t.popup({\n            type: \"confirm\",\n            title: \"Close old session?\",\n            message: `The current session looks old (${formattedAge}), do you want to close it and open a new one to save this work?`,\n            confirmText: \"Yes\",\n            onConfirm: async tp => {\n                current.endDate = new Date();\n                await setWorkSessions(t, sessions);\n                resolve(options.action?.());\n                await tp.closePopup();\n            },\n            cancelText: \"No\",\n            onCancel: tp => {\n                resolve(options.action?.());\n                return tp.closePopup();\n            },\n            mouseEvent: options.mouseEvent.nativeEvent,\n        });\n    });\n}\n\nexport function askToCloseOldSessionAndCreateNew(t: Trello.PowerUp.IFrame, options: AskOptions) {\n    return askToCloseOldSession(t, {\n        hoursPerDay: options.hoursPerDay,\n        mouseEvent: options.mouseEvent,\n        action: async () => {\n            // create the new session\n            await editCurrentWorkSession(t, async session => session);\n\n            options.action?.();\n        },\n    });\n}\n\nexport function closeIfOldAndEditCurrentWorkSession(t: Trello.PowerUp.IFrame, options: EditOptions) {\n    return askToCloseOldSession(t, {\n        action: () => editCurrentWorkSession(t, options.action),\n        hoursPerDay: options.hoursPerDay,\n        mouseEvent: options.mouseEvent,\n    });\n}\n","/*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n*\n* By Eli Grey, http://eligrey.com\n*\n* License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n* source  : http://purl.eligrey.com/github/FileSaver.js\n*/\n\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = typeof window === 'object' && window.window === window\n  ? window : typeof self === 'object' && self.self === self\n  ? self : typeof global === 'object' && global.global === global\n  ? global\n  : this\n\nfunction bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\n  }\n  return blob\n}\n\nfunction download (url, name, opts) {\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\n\nfunction corsEnabled (url) {\n  var xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click (node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\n                          20, false, false, false, false, 0, null)\n    node.dispatchEvent(evt)\n  }\n}\n\n// Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\nvar isMacOSWebView = _global.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent)\n\nvar saveAs = _global.saveAs || (\n  // probably in some web worker\n  (typeof window !== 'object' || window !== _global)\n    ? function saveAs () { /* noop */ }\n\n  // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView\n  : ('download' in HTMLAnchorElement.prototype && !isMacOSWebView)\n  ? function saveAs (blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL\n    var a = document.createElement('a')\n    name = name || blob.name || 'download'\n\n    a.download = name\n    a.rel = 'noopener' // tabnabbing\n\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href)\n          ? download(blob, name, opts)\n          : click(a, a.target = '_blank')\n      } else {\n        click(a)\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob)\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\n      setTimeout(function () { click(a) }, 0)\n    }\n  }\n\n  // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator\n  ? function saveAs (blob, name, opts) {\n    name = name || blob.name || 'download'\n\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts)\n      } else {\n        var a = document.createElement('a')\n        a.href = blob\n        a.target = '_blank'\n        setTimeout(function () { click(a) })\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n    }\n  }\n\n  // Fallback to using FileReader and a popup\n  : function saveAs (blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank')\n    if (popup) {\n      popup.document.title =\n      popup.document.body.innerText = 'downloading...'\n    }\n\n    if (typeof blob === 'string') return download(blob, name, opts)\n\n    var force = blob.type === 'application/octet-stream'\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n\n    if ((isChromeIOS || (force && isSafari) || isMacOSWebView) && typeof FileReader !== 'undefined') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        var url = reader.result\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        if (popup) popup.location.href = url\n        else location = url\n        popup = null // reverse-tabnabbing #460\n      }\n      reader.readAsDataURL(blob)\n    } else {\n      var URL = _global.URL || _global.webkitURL\n      var url = URL.createObjectURL(blob)\n      if (popup) popup.location = url\n      else location.href = url\n      popup = null // reverse-tabnabbing #460\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\n    }\n  }\n)\n\n_global.saveAs = saveAs.saveAs = saveAs\n\nif (typeof module !== 'undefined') {\n  module.exports = saveAs;\n}\n"],"names":["ServedFrom","window","location","host","Version","process","DeployInfo","props","className","SummaryDetail","summary","currentWork","useCurrentWork","elapsedWorkMinutes","useElapsedMinutes","value","startDate","currentSummary","estimateMinutes","updatedEstimateMinutes","workMinutes","remainingMinutes","deltaMinutes","marginMinutes","margin","usedMarginMinutes","Math","min","remainingMarginMinutes","hasUpdatedEstimate","formatMinutes","formatWorkDelta","delta","truncateString","str","maxLength","length","substring","WorkButton","t","useProvidedTrello","providedCard","useProvidedCard","workCard","useCardById","cardId","member","useMember","isWorking","undefined","isSaving","onClick","e","set","id","Date","askToCloseOldSessionAndCreateNew","hoursPerDay","mouseEvent","seconds","round","getElapsedSeconds","minutes","getCardEstimate","estimate","setCardEstimate","closeIfOldAndEditCurrentWorkSession","action","session","addMinutesToDate","onEstimateChanged","formatMinutesWithOptions","zero","name","popup","type","title","message","confirmText","onConfirm","tp","closePopup","cancelText","onCancel","nativeEvent","useCardDueCompletedQuery","queryKey","queryClient","useQueryClient","query","useQuery","card","dueComplete","staleTime","setData","useCallback","data","setQueryData","useMemo","useCardWithFunctions","fields","useState","setCard","refresh","fetched","console","warn","noDeps","useTrelloRender","useCard","useEffect","cards","c","render","getCurrentWork","minutesToMs","cacheTime","Infinity","refetchOnMount","refetchOnReconnect","refetchOnWindowFocus","useTrelloRenderWithOptions","refetch","callImmediately","useInit","listener","currentWorkChangedEvent","useCurrentWorkQuery","setIsSaving","updated","setCurrentWork","useElapsedMs","ms","setMs","animationFrameId","canceled","requestAnimationFrame","updateSeconds","getElapsedMs","cancelAnimationFrame","state","setMember","actualFields","then","res","TrelloPowerUp","iframe","appName","appKey","options","effect","roundTo2Decimals","number","getExportableRows","marginPercentage","getAllCardsEstimates","estimates","filtered","filter","rows","push","totalEstimateMinutes","exportEstimatesToTsv","tsv","row","exportEstimatesForMail","mail","exportToFile","contents","filename","log","saveAs","Blob","useWorkSessions","getWorkSessions","useWorkSessionsQuery","WorkSessionItem","currentWorkMinutes","endDate","totalWorkMinutes","formatDate","sessions","index","findIndex","s","areDatesEqual","splice","setWorkSessions","onRefresh","WorkSessions","workSessions","showAll","setShowAll","current","map","toISOString","EndWorkSessionButton","isLoading","setIsLoading","editCurrentWorkSession","useMarginMultiplier","getMarginMultiplier","useMarginMulitplierQuery","updatedMargin","setMaringMultiplier","MarginInput","input","setInput","toString","usedMargin","step","onChange","target","placeholder","parsed","parseFloat","BoardSummaryPage","setSummary","lastInputTime","setLastInputTime","getLastInputTime","useLastInputTime","getBoardEstimates","date","format","replaceAll","getFullYear","getMonth","padStart","getDate","getHours","getMinutes","getSeconds","askToCloseOldSession","sessionAgeMs","hoursToMs","formattedAge","msToMinutes","Promise","resolve","reject","b","a","autoBom","test","d","XMLHttpRequest","open","responseType","onload","g","response","onerror","error","send","status","dispatchEvent","MouseEvent","document","createEvent","initMouseEvent","f","self","global","navigator","userAgent","HTMLAnchorElement","prototype","h","i","URL","webkitURL","j","createElement","download","rel","href","origin","createObjectURL","setTimeout","revokeObjectURL","msSaveOrOpenBlob","body","innerText","HTMLElement","safari","FileReader","k","onloadend","result","replace","readAsDataURL","l","m","module","exports"],"sourceRoot":""}