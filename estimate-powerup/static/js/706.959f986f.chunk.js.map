{"version":3,"file":"static/js/706.959f986f.chunk.js","mappings":"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","sources":["components/ServedFrom.tsx","components/Version.tsx","components/DeployInfo.tsx","utils/export.ts","hooks/useWorkSessions.ts","components/WorkSessionItem.tsx","components/WorkSessions.tsx","components/EndWorkSessionButton.tsx","hooks/useMarginMultiplier.ts","components/MarginInput.tsx","pages/BoardSummaryPage.tsx","../node_modules/file-saver/src/FileSaver.js"],"sourcesContent":["import React from \"react\";\n\nexport function ServedFrom() {\n    return (\n        <>\n            Served from: {window.location.host}\n        </>\n    );\n}\n","import React from \"react\";\n\nexport function Version() {\n    return (\n        <>\n            Version: {process.env.REACT_APP_VERSION}\n        </>\n    );\n}\n","import React from \"react\";\n\nimport \"./DeployInfo.scss\";\nimport { ServedFrom } from \"./ServedFrom\";\nimport { Version } from \"./Version\";\n\ntype Props = {\n    className?: string;\n}\n\nexport function DeployInfo(props: Props) {\n    return (\n        <div className={props.className}>\n            <span className=\"deploy-text\">\n                <Version />\n            </span>\n            <span className=\"deploy-text\">\n                <ServedFrom />\n            </span>\n        </div>\n    );\n}\n","import { getAllCardsEstimates } from \"../api/estimateApi\";\nimport { Trello } from \"../types/trello\";\n\nfunction roundTo2Decimals(number: number) {\n    return Math.round(number * 100)/100;\n}\n\nexport async function exportEstimatesToTsv(t: Trello.PowerUp.IFrame, marginPercentage: number) {\n    const estimates = await getAllCardsEstimates(t, \"id\", \"name\");\n    const filtered = estimates.filter(e => e.estimateMinutes > 0);\n\n    const rows = [\"Task\\tHours\"];\n\n    for (const estimate of filtered)\n        rows.push(`${estimate.card.name}\\t${roundTo2Decimals(estimate.estimateMinutes/60)}`);\n\n    let totalEstimateHours = 0;\n\n    for (const estimate of filtered)\n        totalEstimateHours += estimate.estimateMinutes/60;\n\n    if (marginPercentage > 0) {\n        const margin = roundTo2Decimals(totalEstimateHours * marginPercentage);\n        rows.push(`margin\\t${margin}`);\n        totalEstimateHours += margin;\n    }\n\n    totalEstimateHours = roundTo2Decimals(totalEstimateHours);\n\n    rows.push(`total\\t${totalEstimateHours}`);\n\n    return rows.join(\"\\n\");\n}\n","import { useQuery, useQueryClient } from \"react-query\";\n\nimport { getWorkSessions } from \"../api/estimateApi\";\nimport { Trello } from \"../types/trello\";\nimport { useTrelloRenderWithOptions } from \"./useTrelloRender\";\n\nconst queryKey = \"work_sessions\";\n\nexport function useWorkSessionsQuery(t: Trello.PowerUp.IFrame) {\n    return useQuery(\n        queryKey,\n        () => getWorkSessions(t),\n        {\n            staleTime: 5 * 1000,\n        },\n    );\n}\n\nexport function useWorkSessions(t: Trello.PowerUp.IFrame) {\n    const queryClient = useQueryClient();\n    const query = useWorkSessionsQuery(t);\n\n    useTrelloRenderWithOptions(t, {\n        refresh: () => queryClient.setQueryData(queryKey, undefined),\n        callImmediately: false,\n    });\n\n    return query;\n}\n","import React from \"react\";\n\nimport { WorkSession } from \"../api/estimateApi\";\nimport { useCurrentWork } from \"../hooks/useCurrentWork\";\nimport { useElapsedMinutes } from \"../hooks/useElapsed\";\nimport { If } from \"../jk/types/jsxControlStatements\";\nimport { formatMinutes } from \"../utils/timeParsing\";\n\ntype Props = {\n    className?: string;\n    session: WorkSession;\n}\n\nexport function WorkSessionItem(props: Props) {\n    const session = props.session;\n    const isoStartDate = session.startDate.toISOString();\n    const formattedDate = isoStartDate.substring(0, isoStartDate.indexOf(\"T\"));\n\n    const currentWork = useCurrentWork();\n    const currentWorkMinutes = useElapsedMinutes(\n        session.endDate === undefined\n            ? currentWork.value?.startDate\n            : undefined,\n    );\n\n    const totalWorkMinutes = session.workMinutes + currentWorkMinutes;\n\n    return (\n        <div className={`work-session ${props.className}`}>\n            Start: {formattedDate}\n            {\" | \"}\n            Work: {formatMinutes(totalWorkMinutes)}\n            <If condition={session.endDate !== undefined}>\n                {\" | \"}\n                &#9745;\n            </If>\n        </div>\n    );\n}\n","import React, { useState } from \"react\";\n\nimport \"./WorkSessions.scss\";\nimport { useProvidedTrello } from \"../hooks/useProvidedTrello\";\nimport { useWorkSessions } from \"../hooks/useWorkSessions\";\nimport { Choose, If, Otherwise, When } from \"../jk/types/jsxControlStatements\";\nimport { WorkSessionItem } from \"./WorkSessionItem\";\n\ntype Props = {\n    className?: string;\n}\n\nexport function WorkSessions(props: Props) {\n    const t = useProvidedTrello();\n    const workSessions = useWorkSessions(t);\n    const [showAll, setShowAll] = useState(false);\n\n    const length = workSessions.data?.length ?? 0;\n\n    return (\n        <div className={`work-sessions ${props.className}`}>\n            <If condition={length > 0}>\n                <div>\n                    Work sessions:\n                    {\"   \"}\n                    <If condition={length > 1}>\n                        <span\n                            className='link-like'\n                            onClick={() => setShowAll(current => !current)}\n                        >\n                            {!showAll ? \"show all\" : \"hide older\"}\n                        </span>\n                    </If>\n                </div>\n            </If>\n            <div className='work-sessions-list'>\n                <Choose>\n                    <When condition={workSessions.data === undefined}>\n                        <p>Loading...</p>\n                    </When>\n                    <Otherwise>\n                        <Choose>\n                            <When condition={showAll}>\n                                {workSessions.data!.map(session => (\n                                    <WorkSessionItem\n                                        key={session.startDate.toISOString()}\n                                        session={session}\n                                    />\n                                ))}\n                            </When>\n                            <Otherwise>\n                                <If condition={length > 0}>\n                                    <WorkSessionItem session={workSessions.data![workSessions.data!.length - 1]} />\n                                </If>\n                            </Otherwise>\n                        </Choose>\n                    </Otherwise>\n                </Choose>\n            </div>\n        </div>\n    );\n}\n","import React, { useState } from \"react\";\nimport { editCurrentWorkSession } from \"../api/estimateApi\";\nimport { useProvidedTrello } from \"../hooks/useProvidedTrello\";\nimport { useWorkSessions } from \"../hooks/useWorkSessions\";\n\ntype Props = {\n    className?: string;\n}\n\nexport function EndWorkSessionButton(props: Props) {\n    const t = useProvidedTrello();\n    const sessions = useWorkSessions(t);\n    const [isLoading, setIsLoading] = useState(false);\n\n    if (sessions.data === undefined\n        || sessions.data.length === 0\n        || sessions.data[sessions.data.length - 1].endDate !== undefined\n    )\n        return null;\n\n    return (\n        <button\n            className={`end-work-session mod-danger ${props.className}`}\n            onClick={async () => {\n                if (isLoading)\n                    return;\n\n                setIsLoading(true);\n                await editCurrentWorkSession(t, async current => ({\n                    ...current,\n                    endDate: new Date(),\n                }));\n                await sessions.refetch();\n                setIsLoading(false);\n            }}\n        >\n            {!isLoading ? \"End session\" : \"...\"}\n        </button>\n    );\n}\n","import { useCallback, useMemo, useState } from \"react\";\r\nimport { useQuery, useQueryClient } from \"react-query\";\r\n\r\nimport { getMarginMultiplier, setMaringMultiplier } from \"../api/estimateApi\";\r\nimport { Trello } from \"../types/trello\";\r\nimport { useTrelloRender } from \"./useTrelloRender\";\r\n\r\nconst queryKey = \"margin\";\r\n\r\nexport function useMarginMulitplierQuery(t: Trello.PowerUp.IFrame) {\r\n    return useQuery(\r\n        queryKey,\r\n        () => getMarginMultiplier(t),\r\n        { staleTime: 100 },\r\n    );\r\n}\r\n\r\nexport function useMarginMultiplier(t: Trello.PowerUp.IFrame) {\r\n    const query = useMarginMulitplierQuery(t);\r\n    const queryClient = useQueryClient();\r\n\r\n    useTrelloRender(t, query.refetch);\r\n\r\n    const set = useCallback(\r\n        async (updatedMargin: number) => {\r\n            await setMaringMultiplier(t, updatedMargin);\r\n            queryClient.setQueryData(queryKey, updatedMargin);\r\n        },\r\n        [queryClient],\r\n    );\r\n\r\n    return useMemo(\r\n        () => ({\r\n            value: query.data ?? 0,\r\n            set,\r\n        }),\r\n        [query.data, set],\r\n    );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useMarginMultiplier } from \"../hooks/useMarginMultiplier\";\r\nimport { useProvidedTrello } from \"../hooks/useProvidedTrello\";\r\n\r\nimport \"./MarginInput.scss\";\r\n\r\ntype Props = {\r\n    className?: string;\r\n}\r\n\r\nexport function MarginInput(props: Props) {\r\n    const t = useProvidedTrello();\r\n    const [input, setInput] = useState(\"\");\r\n\r\n    const margin = useMarginMultiplier(t);\r\n\r\n    useEffect(\r\n        () => setInput(margin.value.toString()),\r\n        [margin.value],\r\n    );\r\n\r\n    return (\r\n        <div className={`margin-input ${props.className ?? \"\"}`}>\r\n            <input\r\n                type=\"number\"\r\n                step={0.1}\r\n                value={input}\r\n                onChange={e => setInput(e.target.value)}\r\n                placeholder='insert margin multiplier...'\r\n            />\r\n            <button\r\n                onClick={() => {\r\n                    const parsed = parseFloat(input);\r\n                    if (parsed > 0)\r\n                        margin.set(parsed);\r\n                }}\r\n            >\r\n                Set Margin\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\nimport { saveAs } from \"file-saver\";\n\nimport \"./BoardSummaryPage.scss\";\nimport { getBoardEstimates, SummaryEstimate } from \"../api/estimateApi\";\nimport { formatMinutes } from \"../utils/timeParsing\";\nimport { exportEstimatesToTsv } from \"../utils/export\";\nimport { useProvidedTrello } from \"../hooks/useProvidedTrello\";\nimport { useWorkSessions } from \"../hooks/useWorkSessions\";\nimport { useCurrentWork } from \"../hooks/useCurrentWork\";\nimport { useElapsedMinutes } from \"../hooks/useElapsed\";\nimport { WorkButton } from \"../components/WorkButton\";\nimport { WorkSessions } from \"../components/WorkSessions\";\nimport { EndWorkSessionButton } from \"../components/EndWorkSessionButton\";\nimport { DeployInfo } from \"../components/DeployInfo\";\nimport { useTrelloRender } from \"../hooks/useTrelloRender\";\nimport { If } from \"../jk/types/jsxControlStatements\";\nimport { formatWorkDelta } from \"../utils/workDelta\";\nimport { useMarginMultiplier } from \"../hooks/useMarginMultiplier\";\nimport { MarginInput } from \"../components/MarginInput\";\n\nexport default function BoardSummaryPage() {\n    const t = useProvidedTrello();\n    const [summary, setSummary] = useState<SummaryEstimate>();\n    const margin = useMarginMultiplier(t);\n    const workSessions = useWorkSessions(t);\n    const currentWork = useCurrentWork();\n    const elapsedWorkMinutes = useElapsedMinutes(currentWork.value?.startDate);\n\n    useTrelloRender(t, async () => {\n        const fetched = await getBoardEstimates(t);\n        setSummary(fetched);\n    });\n\n    if (summary === undefined)\n        return (<p>Loading... </p>);\n\n    const currentSummary: SummaryEstimate = {\n        estimateMinutes: summary.estimateMinutes,\n        updatedEstimateMinutes: summary.updatedEstimateMinutes,\n        workMinutes: summary.workMinutes + elapsedWorkMinutes,\n        remainingMinutes: summary.remainingMinutes - elapsedWorkMinutes,\n        deltaMinutes: summary.deltaMinutes,\n    };\n\n    const marginMinutes = margin.value > 0\n        ? margin.value * summary.estimateMinutes\n        : 0\n    ;\n\n    const hasUpdatedEstimate = currentSummary.updatedEstimateMinutes > 0\n        && currentSummary.updatedEstimateMinutes !== currentSummary.estimateMinutes\n    ;\n\n    return (\n        <div className='summary'>\n            <div className=\"section\">\n                <div>\n                    {hasUpdatedEstimate && \"Original \"}\n                    Estimate: {formatMinutes(currentSummary.estimateMinutes)}\n                    <If condition={marginMinutes > 0}>\n                        {\" \"} (+ margin: {formatMinutes(marginMinutes)})\n                    </If>\n                </div>\n                <If condition={hasUpdatedEstimate}>\n                    <div>\n                    Updated Estimate: {formatMinutes(currentSummary.updatedEstimateMinutes)}\n                    </div>\n                </If>\n                <div>\n                    Work: {formatMinutes(currentSummary.workMinutes)}\n                </div>\n                <div>\n                    Remaining: {formatMinutes(currentSummary.remainingMinutes)}\n                </div>\n                <div>\n                    {formatWorkDelta({ delta: summary.deltaMinutes })}\n                </div>\n            </div>\n\n            <MarginInput className=\"section\" />\n\n            <div className=\"section work\">\n                <WorkSessions />\n                <div className=\"buttons\">\n                    <EndWorkSessionButton />\n                    <WorkButton onEstimateChanged={() => workSessions.refetch()} />\n                </div>\n            </div>\n            {/* <button onClick={async () => {\n                const sessions = await getWorkSessions(t);\n                sessions.pop();\n                sessions[sessions.length - 1].endDate = undefined;\n                await setWorkSessions(t, sessions);\n            }}>\n                delete last session\n            </button> */}\n            <div className='export-section'>\n                <div className='export-inputs'>\n                    <button\n                        className='mod-primary'\n                        onClick={async () => {\n                            const tsv = await exportEstimatesToTsv(t, margin.value);\n                            console.log(tsv);\n                            saveAs(\n                                new Blob([tsv], { type: \"text/plain;charset=utf-8\" }),\n                                \"estimate.tsv\",\n                            );\n                        }}\n                    >\n                        Export estimates\n                    </button>\n                </div>\n            </div>\n            <DeployInfo className=\"deploy-info\" />\n        </div>\n    );\n}\n","/*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n*\n* By Eli Grey, http://eligrey.com\n*\n* License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n* source  : http://purl.eligrey.com/github/FileSaver.js\n*/\n\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = typeof window === 'object' && window.window === window\n  ? window : typeof self === 'object' && self.self === self\n  ? self : typeof global === 'object' && global.global === global\n  ? global\n  : this\n\nfunction bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\n  }\n  return blob\n}\n\nfunction download (url, name, opts) {\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\n\nfunction corsEnabled (url) {\n  var xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click (node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\n                          20, false, false, false, false, 0, null)\n    node.dispatchEvent(evt)\n  }\n}\n\n// Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\nvar isMacOSWebView = _global.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent)\n\nvar saveAs = _global.saveAs || (\n  // probably in some web worker\n  (typeof window !== 'object' || window !== _global)\n    ? function saveAs () { /* noop */ }\n\n  // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView\n  : ('download' in HTMLAnchorElement.prototype && !isMacOSWebView)\n  ? function saveAs (blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL\n    var a = document.createElement('a')\n    name = name || blob.name || 'download'\n\n    a.download = name\n    a.rel = 'noopener' // tabnabbing\n\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href)\n          ? download(blob, name, opts)\n          : click(a, a.target = '_blank')\n      } else {\n        click(a)\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob)\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\n      setTimeout(function () { click(a) }, 0)\n    }\n  }\n\n  // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator\n  ? function saveAs (blob, name, opts) {\n    name = name || blob.name || 'download'\n\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts)\n      } else {\n        var a = document.createElement('a')\n        a.href = blob\n        a.target = '_blank'\n        setTimeout(function () { click(a) })\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n    }\n  }\n\n  // Fallback to using FileReader and a popup\n  : function saveAs (blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank')\n    if (popup) {\n      popup.document.title =\n      popup.document.body.innerText = 'downloading...'\n    }\n\n    if (typeof blob === 'string') return download(blob, name, opts)\n\n    var force = blob.type === 'application/octet-stream'\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n\n    if ((isChromeIOS || (force && isSafari) || isMacOSWebView) && typeof FileReader !== 'undefined') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        var url = reader.result\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        if (popup) popup.location.href = url\n        else location = url\n        popup = null // reverse-tabnabbing #460\n      }\n      reader.readAsDataURL(blob)\n    } else {\n      var URL = _global.URL || _global.webkitURL\n      var url = URL.createObjectURL(blob)\n      if (popup) popup.location = url\n      else location.href = url\n      popup = null // reverse-tabnabbing #460\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\n    }\n  }\n)\n\n_global.saveAs = saveAs.saveAs = saveAs\n\nif (typeof module !== 'undefined') {\n  module.exports = saveAs;\n}\n"],"names":["ServedFrom","window","location","host","Version","process","DeployInfo","props","className","roundTo2Decimals","number","Math","round","exportEstimatesToTsv","t","marginPercentage","getAllCardsEstimates","estimates","filtered","filter","e","estimateMinutes","rows","estimate","push","card","name","totalEstimateHours","margin","join","queryKey","useWorkSessions","queryClient","useQueryClient","query","useQuery","getWorkSessions","staleTime","useWorkSessionsQuery","useTrelloRenderWithOptions","refresh","setQueryData","undefined","callImmediately","WorkSessionItem","session","isoStartDate","startDate","toISOString","formattedDate","substring","indexOf","currentWork","useCurrentWork","currentWorkMinutes","useElapsedMinutes","endDate","value","totalWorkMinutes","workMinutes","formatMinutes","WorkSessions","workSessions","useProvidedTrello","useState","showAll","setShowAll","length","data","onClick","current","map","EndWorkSessionButton","sessions","isLoading","setIsLoading","editCurrentWorkSession","Date","refetch","useMarginMultiplier","getMarginMultiplier","useMarginMulitplierQuery","useTrelloRender","set","useCallback","updatedMargin","setMaringMultiplier","useMemo","MarginInput","input","setInput","useEffect","toString","type","step","onChange","target","placeholder","parsed","parseFloat","BoardSummaryPage","summary","setSummary","elapsedWorkMinutes","getBoardEstimates","fetched","currentSummary","updatedEstimateMinutes","remainingMinutes","deltaMinutes","marginMinutes","hasUpdatedEstimate","formatWorkDelta","delta","WorkButton","onEstimateChanged","tsv","console","log","saveAs","Blob","b","a","autoBom","warn","test","c","d","XMLHttpRequest","open","responseType","onload","g","response","onerror","error","send","status","dispatchEvent","MouseEvent","document","createEvent","initMouseEvent","f","self","global","navigator","userAgent","HTMLAnchorElement","prototype","h","i","URL","webkitURL","j","createElement","download","rel","href","origin","createObjectURL","setTimeout","revokeObjectURL","msSaveOrOpenBlob","title","body","innerText","HTMLElement","safari","FileReader","k","onloadend","result","replace","readAsDataURL","l","m","module","exports"],"sourceRoot":""}