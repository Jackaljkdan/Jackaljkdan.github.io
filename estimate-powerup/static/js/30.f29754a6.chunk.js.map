{"version":3,"file":"static/js/30.f29754a6.chunk.js","mappings":"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","sources":["components/ServedFrom.tsx","components/Version.tsx","components/DeployInfo.tsx","utils/export.ts","hooks/useWorkSessions.ts","components/WorkSessionItem.tsx","components/WorkSessions.tsx","components/EndWorkSessionButton.tsx","hooks/useMarginMultiplier.ts","components/MarginInput.tsx","pages/BoardSummaryPage.tsx","hooks/useLastInputTime.ts","../node_modules/file-saver/src/FileSaver.js"],"sourcesContent":["import React from \"react\";\n\nexport function ServedFrom() {\n    return (\n        <>\n            Served from: {window.location.host}\n        </>\n    );\n}\n","import React from \"react\";\n\nexport function Version() {\n    return (\n        <>\n            Version: {process.env.REACT_APP_VERSION}\n        </>\n    );\n}\n","import React from \"react\";\n\nimport \"./DeployInfo.scss\";\nimport { ServedFrom } from \"./ServedFrom\";\nimport { Version } from \"./Version\";\n\ntype Props = {\n    className?: string;\n}\n\nexport function DeployInfo(props: Props) {\n    return (\n        <div className={props.className}>\n            <span className=\"deploy-text\">\n                <Version />\n            </span>\n            <span className=\"deploy-text\">\n                <ServedFrom />\n            </span>\n        </div>\n    );\n}\n","import saveAs from \"file-saver\";\nimport { getAllCardsEstimates } from \"../api/estimateApi\";\nimport { Trello } from \"../types/trello\";\nimport { formatMinutes } from \"./timeParsing\";\n\nfunction roundTo2Decimals(number: number) {\n    return Math.round(number * 100)/100;\n}\n\ntype Row = {\n    name: string;\n    minutes: number;\n}\n\nexport async function getExportableRows(t: Trello.PowerUp.IFrame, marginPercentage: number) {\n    const estimates = await getAllCardsEstimates(t, \"id\", \"name\");\n    const filtered = estimates.filter(e => e.estimateMinutes > 0);\n\n    const rows: Row[] = [];\n\n    for (const estimate of filtered) {\n        rows.push({\n            name: estimate.card.name,\n            minutes: estimate.estimateMinutes,\n        });\n    }\n\n    let totalEstimateMinutes = 0;\n\n    for (const estimate of filtered)\n        totalEstimateMinutes += estimate.estimateMinutes;\n\n    if (marginPercentage > 0) {\n        const margin = totalEstimateMinutes * marginPercentage;\n        rows.push({\n            name: \"margin\",\n            minutes: margin,\n        });\n\n        totalEstimateMinutes += margin;\n    }\n\n    rows.push({\n        name: \"total\",\n        minutes: totalEstimateMinutes,\n    });\n\n    return rows;\n}\n\nexport async function exportEstimatesToTsv(t: Trello.PowerUp.IFrame, marginPercentage: number) {\n    const rows = await getExportableRows(t, marginPercentage);\n\n    let tsv = \"Task\\tHours\";\n\n    for (const row of rows)\n        tsv += \"\\n\" + row.name + \"\\t\" + roundTo2Decimals(row.minutes/60);\n\n    return tsv;\n}\n\nexport async function exportEstimatesForMail(t: Trello.PowerUp.IFrame, marginPercentage: number) {\n    const rows = await getExportableRows(t, marginPercentage);\n\n    let mail = \"\";\n\n    for (const row of rows)\n        mail += row.name + \"  \" + formatMinutes(row.minutes) + \"\\n\";\n\n    return mail;\n}\n\nexport async function exportToFile(contents: string, filename: string) {\n    console.log(contents);\n    saveAs(\n        new Blob([contents], { type: \"text/plain;charset=utf-8\" }),\n        filename,\n    );\n}\n","import { useQuery, useQueryClient } from \"react-query\";\n\nimport { getWorkSessions } from \"../api/estimateApi\";\nimport { Trello } from \"../types/trello\";\nimport { useTrelloRenderWithOptions } from \"./useTrelloRender\";\n\nconst queryKey = \"work_sessions\";\n\nexport function useWorkSessionsQuery(t: Trello.PowerUp.IFrame) {\n    return useQuery(\n        queryKey,\n        () => getWorkSessions(t),\n        {\n            staleTime: 5 * 1000,\n        },\n    );\n}\n\nexport function useWorkSessions(t: Trello.PowerUp.IFrame) {\n    const queryClient = useQueryClient();\n    const query = useWorkSessionsQuery(t);\n\n    useTrelloRenderWithOptions(t, {\n        refresh: () => queryClient.setQueryData(queryKey, undefined),\n        callImmediately: false,\n    });\n\n    return query;\n}\n","import React from \"react\";\n\nimport \"./WorkSessionItem.scss\";\nimport { getWorkSessions, setWorkSessions, WorkSession } from \"../api/estimateApi\";\nimport { useCurrentWork } from \"../hooks/useCurrentWork\";\nimport { useElapsedMinutes } from \"../hooks/useElapsed\";\nimport { If } from \"../jk/types/jsxControlStatements\";\nimport { formatMinutes } from \"../utils/timeParsing\";\nimport { useProvidedTrello } from \"../hooks/useProvidedTrello\";\nimport { areDatesEqual } from \"../utils/dateMath\";\nimport { formatDate } from \"../utils/dateFormatting\";\n\ntype Props = {\n    className?: string;\n    session: WorkSession;\n    onRefresh?: () => void;\n}\n\nexport function WorkSessionItem(props: Props) {\n    const t = useProvidedTrello();\n    const session = props.session;\n\n    const currentWork = useCurrentWork();\n    const currentWorkMinutes = useElapsedMinutes(\n        session.endDate === undefined\n            ? currentWork.value?.startDate\n            : undefined,\n    );\n\n    const totalWorkMinutes = session.workMinutes + currentWorkMinutes;\n\n    return (\n        <div className={`work-session ${props.className}`}>\n            Start: {formatDate(session.startDate)}\n            {\" | \"}\n            Work: {formatMinutes(totalWorkMinutes)}\n            <If condition={session.endDate !== undefined}>\n                {\" | \"}\n                &#9745;\n            </If>\n            <button\n                className=\"mod-danger\"\n                onClick={e => t.popup({\n                    type: \"confirm\",\n                    title: \"Delete session?\",\n                    message: \"Are you sure you want to delete this session?\",\n                    confirmText: \"Yes\",\n                    onConfirm: async tp => {\n                        const sessions = await getWorkSessions(t);\n                        const index = sessions.findIndex(s => areDatesEqual(s.startDate, session.startDate));\n\n                        if (index >= 0) {\n                            sessions.splice(index, 1);\n                            await setWorkSessions(t, sessions);\n                        }\n\n                        props.onRefresh?.();\n\n                        await tp.closePopup();\n                    },\n                    cancelText: \"No\",\n                    onCancel: tp => tp.closePopup(),\n                    mouseEvent: e.nativeEvent,\n                })}\n            >\n                X\n            </button>\n        </div>\n    );\n}\n","import React, { useState } from \"react\";\n\nimport \"./WorkSessions.scss\";\nimport { useProvidedTrello } from \"../hooks/useProvidedTrello\";\nimport { useWorkSessions } from \"../hooks/useWorkSessions\";\nimport { Choose, If, Otherwise, When } from \"../jk/types/jsxControlStatements\";\nimport { WorkSessionItem } from \"./WorkSessionItem\";\n\ntype Props = {\n    className?: string;\n}\n\nexport function WorkSessions(props: Props) {\n    const t = useProvidedTrello();\n    const workSessions = useWorkSessions(t);\n    const [showAll, setShowAll] = useState(false);\n\n    const length = workSessions.data?.length ?? 0;\n\n    return (\n        <div className={`work-sessions ${props.className}`}>\n            <If condition={length > 0}>\n                <div>\n                    Work sessions:\n                    {\"   \"}\n                    <If condition={length > 1}>\n                        <span\n                            className='link-like'\n                            onClick={() => setShowAll(current => !current)}\n                        >\n                            {!showAll ? \"show all\" : \"hide older\"}\n                        </span>\n                    </If>\n                </div>\n            </If>\n            <div className='work-sessions-list'>\n                <Choose>\n                    <When condition={workSessions.data === undefined}>\n                        <p>Loading...</p>\n                    </When>\n                    <Otherwise>\n                        <Choose>\n                            <When condition={showAll}>\n                                {workSessions.data!.map(session => (\n                                    <WorkSessionItem\n                                        key={session.startDate.toISOString()}\n                                        session={session}\n                                        onRefresh={workSessions.refetch}\n                                    />\n                                ))}\n                            </When>\n                            <Otherwise>\n                                <If condition={length > 0}>\n                                    <WorkSessionItem\n                                        session={workSessions.data![workSessions.data!.length - 1]}\n                                        onRefresh={workSessions.refetch}\n                                    />\n                                </If>\n                            </Otherwise>\n                        </Choose>\n                    </Otherwise>\n                </Choose>\n            </div>\n        </div>\n    );\n}\n","import React, { useState } from \"react\";\nimport { editCurrentWorkSession } from \"../api/estimateApi\";\nimport { useProvidedTrello } from \"../hooks/useProvidedTrello\";\nimport { useWorkSessions } from \"../hooks/useWorkSessions\";\n\ntype Props = {\n    className?: string;\n}\n\nexport function EndWorkSessionButton(props: Props) {\n    const t = useProvidedTrello();\n    const sessions = useWorkSessions(t);\n    const [isLoading, setIsLoading] = useState(false);\n\n    if (sessions.data === undefined\n        || sessions.data.length === 0\n        || sessions.data[sessions.data.length - 1].endDate !== undefined\n    )\n        return null;\n\n    return (\n        <button\n            className={`end-work-session mod-danger ${props.className}`}\n            onClick={async () => {\n                if (isLoading)\n                    return;\n\n                setIsLoading(true);\n                await editCurrentWorkSession(t, async current => ({\n                    ...current,\n                    endDate: new Date(),\n                }));\n                await sessions.refetch();\n                setIsLoading(false);\n            }}\n        >\n            {!isLoading ? \"End session\" : \"...\"}\n        </button>\n    );\n}\n","import { useCallback, useMemo, useState } from \"react\";\r\nimport { useQuery, useQueryClient } from \"react-query\";\r\n\r\nimport { getMarginMultiplier, setMaringMultiplier } from \"../api/estimateApi\";\r\nimport { Trello } from \"../types/trello\";\r\nimport { useTrelloRender } from \"./useTrelloRender\";\r\n\r\nconst queryKey = \"margin\";\r\n\r\nexport function useMarginMulitplierQuery(t: Trello.PowerUp.IFrame) {\r\n    return useQuery(\r\n        queryKey,\r\n        () => getMarginMultiplier(t),\r\n        { staleTime: 100 },\r\n    );\r\n}\r\n\r\nexport function useMarginMultiplier(t: Trello.PowerUp.IFrame) {\r\n    const query = useMarginMulitplierQuery(t);\r\n    const queryClient = useQueryClient();\r\n\r\n    useTrelloRender(t, query.refetch);\r\n\r\n    const set = useCallback(\r\n        async (updatedMargin: number) => {\r\n            await setMaringMultiplier(t, updatedMargin);\r\n            queryClient.setQueryData(queryKey, updatedMargin);\r\n        },\r\n        [queryClient],\r\n    );\r\n\r\n    return useMemo(\r\n        () => ({\r\n            value: query.data ?? 0,\r\n            set,\r\n        }),\r\n        [query.data, set],\r\n    );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useMarginMultiplier } from \"../hooks/useMarginMultiplier\";\r\nimport { useProvidedTrello } from \"../hooks/useProvidedTrello\";\r\n\r\nimport \"./MarginInput.scss\";\r\n\r\ntype Props = {\r\n    className?: string;\r\n}\r\n\r\nexport function MarginInput(props: Props) {\r\n    const t = useProvidedTrello();\r\n    const [input, setInput] = useState(\"\");\r\n\r\n    const margin = useMarginMultiplier(t);\r\n\r\n    useEffect(\r\n        () => setInput(margin.value.toString()),\r\n        [margin.value],\r\n    );\r\n\r\n    return (\r\n        <div className={`margin-input ${props.className ?? \"\"}`}>\r\n            <input\r\n                type=\"number\"\r\n                step={0.1}\r\n                value={input}\r\n                onChange={e => setInput(e.target.value)}\r\n                placeholder='insert margin multiplier...'\r\n            />\r\n            <button\r\n                onClick={() => {\r\n                    const parsed = parseFloat(input);\r\n                    if (parsed > 0)\r\n                        margin.set(parsed);\r\n                }}\r\n            >\r\n                Set Margin\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\n\nimport \"./BoardSummaryPage.scss\";\nimport { getBoardEstimates, SummaryEstimate } from \"../api/estimateApi\";\nimport { formatMinutes } from \"../utils/timeParsing\";\nimport { exportEstimatesForMail, exportEstimatesToTsv, exportToFile } from \"../utils/export\";\nimport { useProvidedTrello } from \"../hooks/useProvidedTrello\";\nimport { useWorkSessions } from \"../hooks/useWorkSessions\";\nimport { useCurrentWork } from \"../hooks/useCurrentWork\";\nimport { useElapsedMinutes } from \"../hooks/useElapsed\";\nimport { WorkButton } from \"../components/WorkButton\";\nimport { WorkSessions } from \"../components/WorkSessions\";\nimport { EndWorkSessionButton } from \"../components/EndWorkSessionButton\";\nimport { DeployInfo } from \"../components/DeployInfo\";\nimport { useTrelloRender } from \"../hooks/useTrelloRender\";\nimport { If } from \"../jk/types/jsxControlStatements\";\nimport { formatWorkDelta } from \"../utils/workDelta\";\nimport { useMarginMultiplier } from \"../hooks/useMarginMultiplier\";\nimport { MarginInput } from \"../components/MarginInput\";\nimport { formatDate } from \"../utils/dateFormatting\";\nimport { useLastInputTime } from \"../hooks/useLastInputTime\";\n\nexport default function BoardSummaryPage() {\n    const t = useProvidedTrello();\n    const [summary, setSummary] = useState<SummaryEstimate>();\n    const margin = useMarginMultiplier(t);\n    const workSessions = useWorkSessions(t);\n    const currentWork = useCurrentWork();\n    const elapsedWorkMinutes = useElapsedMinutes(currentWork.value?.startDate);\n    const lastInputTime = useLastInputTime();\n\n    useTrelloRender(t, async () => {\n        const fetched = await getBoardEstimates(t);\n        setSummary(fetched);\n    });\n\n    if (summary === undefined)\n        return (<p>Loading... </p>);\n\n    const currentSummary: SummaryEstimate = {\n        estimateMinutes: summary.estimateMinutes,\n        updatedEstimateMinutes: summary.updatedEstimateMinutes,\n        workMinutes: summary.workMinutes + elapsedWorkMinutes,\n        remainingMinutes: summary.remainingMinutes - elapsedWorkMinutes,\n        deltaMinutes: summary.deltaMinutes,\n    };\n\n    const marginMinutes = margin.value > 0\n        ? margin.value * summary.estimateMinutes\n        : 0\n    ;\n\n    const hasUpdatedEstimate = currentSummary.updatedEstimateMinutes > 0\n        && currentSummary.updatedEstimateMinutes !== currentSummary.estimateMinutes\n    ;\n\n    return (\n        <div className='summary'>\n            <div className=\"section\">\n                <div>\n                    {hasUpdatedEstimate && \"Original \"}\n                    Estimate: {formatMinutes(currentSummary.estimateMinutes)}\n                    <If condition={marginMinutes > 0}>\n                        {\" \"} (+ margin: {formatMinutes(marginMinutes)})\n                    </If>\n                </div>\n                <If condition={hasUpdatedEstimate}>\n                    <div>\n                    Updated Estimate: {formatMinutes(currentSummary.updatedEstimateMinutes)}\n                    </div>\n                </If>\n                <div>\n                    Work: {formatMinutes(currentSummary.workMinutes)}\n                </div>\n                <div>\n                    Remaining: {formatMinutes(currentSummary.remainingMinutes)}\n                </div>\n                <div>\n                    {formatWorkDelta({ delta: summary.deltaMinutes })}\n                </div>\n            </div>\n\n            <MarginInput className=\"section\" />\n\n            <div className=\"section work\">\n                <WorkSessions />\n                <div className=\"buttons\">\n                    <EndWorkSessionButton />\n                    <WorkButton onEstimateChanged={() => workSessions.refetch()} />\n                </div>\n            </div>\n            <If condition={lastInputTime}>\n                <div>\n                    Last activity: {formatDate(lastInputTime!, \"yyyy-MM-dd hh:mm:ss\")}\n                </div>\n            </If>\n            <div className='export-section'>\n                <div className='export-inputs'>\n                    <button\n                        className='mod-primary'\n                        onClick={async () => exportToFile(\n                            await exportEstimatesToTsv(t, margin.value),\n                            \"estimate.tsv\",\n                        )}\n                    >\n                        Export estimates\n                    </button>\n                    <button\n                        className='mod-primary'\n                        onClick={async () => exportToFile(\n                            await exportEstimatesForMail(t, margin.value),\n                            \"estimate.txt\",\n                        )}\n                    >\n                        Export mail\n                    </button>\n                </div>\n            </div>\n            <DeployInfo className=\"deploy-info\" />\n        </div>\n    );\n}\n","import { useState } from \"react\";\r\nimport { getLastInputTime } from \"../api/estimateApi\";\r\nimport { useProvidedTrello } from \"./useProvidedTrello\";\r\nimport { useTrelloRender } from \"./useTrelloRender\";\r\n\r\nexport function useLastInputTime() {\r\n    const t = useProvidedTrello();\r\n    const [lastInputTime, setLastInputTime] = useState<Date | null>(null);\r\n\r\n    useTrelloRender(t, async () => {\r\n        const fetched = await getLastInputTime(t);\r\n        setLastInputTime(fetched);\r\n    });\r\n\r\n    return lastInputTime;\r\n}\r\n","/*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n*\n* By Eli Grey, http://eligrey.com\n*\n* License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n* source  : http://purl.eligrey.com/github/FileSaver.js\n*/\n\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = typeof window === 'object' && window.window === window\n  ? window : typeof self === 'object' && self.self === self\n  ? self : typeof global === 'object' && global.global === global\n  ? global\n  : this\n\nfunction bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\n  }\n  return blob\n}\n\nfunction download (url, name, opts) {\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\n\nfunction corsEnabled (url) {\n  var xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click (node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\n                          20, false, false, false, false, 0, null)\n    node.dispatchEvent(evt)\n  }\n}\n\n// Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\nvar isMacOSWebView = _global.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent)\n\nvar saveAs = _global.saveAs || (\n  // probably in some web worker\n  (typeof window !== 'object' || window !== _global)\n    ? function saveAs () { /* noop */ }\n\n  // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView\n  : ('download' in HTMLAnchorElement.prototype && !isMacOSWebView)\n  ? function saveAs (blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL\n    var a = document.createElement('a')\n    name = name || blob.name || 'download'\n\n    a.download = name\n    a.rel = 'noopener' // tabnabbing\n\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href)\n          ? download(blob, name, opts)\n          : click(a, a.target = '_blank')\n      } else {\n        click(a)\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob)\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\n      setTimeout(function () { click(a) }, 0)\n    }\n  }\n\n  // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator\n  ? function saveAs (blob, name, opts) {\n    name = name || blob.name || 'download'\n\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts)\n      } else {\n        var a = document.createElement('a')\n        a.href = blob\n        a.target = '_blank'\n        setTimeout(function () { click(a) })\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n    }\n  }\n\n  // Fallback to using FileReader and a popup\n  : function saveAs (blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank')\n    if (popup) {\n      popup.document.title =\n      popup.document.body.innerText = 'downloading...'\n    }\n\n    if (typeof blob === 'string') return download(blob, name, opts)\n\n    var force = blob.type === 'application/octet-stream'\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n\n    if ((isChromeIOS || (force && isSafari) || isMacOSWebView) && typeof FileReader !== 'undefined') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        var url = reader.result\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        if (popup) popup.location.href = url\n        else location = url\n        popup = null // reverse-tabnabbing #460\n      }\n      reader.readAsDataURL(blob)\n    } else {\n      var URL = _global.URL || _global.webkitURL\n      var url = URL.createObjectURL(blob)\n      if (popup) popup.location = url\n      else location.href = url\n      popup = null // reverse-tabnabbing #460\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\n    }\n  }\n)\n\n_global.saveAs = saveAs.saveAs = saveAs\n\nif (typeof module !== 'undefined') {\n  module.exports = saveAs;\n}\n"],"names":["ServedFrom","window","location","host","Version","process","DeployInfo","props","className","roundTo2Decimals","number","Math","round","getExportableRows","t","marginPercentage","getAllCardsEstimates","estimates","filtered","filter","e","estimateMinutes","rows","estimate","push","name","card","minutes","totalEstimateMinutes","margin","exportEstimatesToTsv","tsv","row","exportEstimatesForMail","mail","formatMinutes","exportToFile","contents","filename","console","log","saveAs","Blob","type","queryKey","useWorkSessions","queryClient","useQueryClient","query","useQuery","getWorkSessions","staleTime","useWorkSessionsQuery","useTrelloRenderWithOptions","refresh","setQueryData","undefined","callImmediately","WorkSessionItem","useProvidedTrello","session","currentWork","useCurrentWork","currentWorkMinutes","useElapsedMinutes","endDate","value","startDate","totalWorkMinutes","workMinutes","formatDate","onClick","popup","title","message","confirmText","onConfirm","tp","sessions","index","findIndex","s","areDatesEqual","splice","setWorkSessions","onRefresh","closePopup","cancelText","onCancel","mouseEvent","nativeEvent","WorkSessions","workSessions","useState","showAll","setShowAll","length","data","current","map","refetch","toISOString","EndWorkSessionButton","isLoading","setIsLoading","editCurrentWorkSession","Date","useMarginMultiplier","getMarginMultiplier","useMarginMulitplierQuery","useTrelloRender","set","useCallback","updatedMargin","setMaringMultiplier","useMemo","MarginInput","input","setInput","useEffect","toString","step","onChange","target","placeholder","parsed","parseFloat","BoardSummaryPage","summary","setSummary","elapsedWorkMinutes","lastInputTime","setLastInputTime","getLastInputTime","fetched","useLastInputTime","getBoardEstimates","currentSummary","updatedEstimateMinutes","remainingMinutes","deltaMinutes","marginMinutes","hasUpdatedEstimate","formatWorkDelta","delta","WorkButton","onEstimateChanged","b","a","autoBom","warn","test","c","d","XMLHttpRequest","open","responseType","onload","g","response","onerror","error","send","status","dispatchEvent","MouseEvent","document","createEvent","initMouseEvent","f","self","global","navigator","userAgent","HTMLAnchorElement","prototype","h","i","URL","webkitURL","j","createElement","download","rel","href","origin","createObjectURL","setTimeout","revokeObjectURL","msSaveOrOpenBlob","body","innerText","HTMLElement","safari","FileReader","k","onloadend","result","replace","readAsDataURL","l","m","module","exports"],"sourceRoot":""}