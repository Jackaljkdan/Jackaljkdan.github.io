{"version":3,"file":"static/js/577.452024ce.chunk.js","mappings":"yJAEO,SAASA,IACZ,OACI,gDACkBC,OAAOC,SAASC,QCHnC,SAASC,IACZ,OACI,4CACcC,YCKf,SAASC,EAAWC,GACvB,OACI,iBAAKC,UAAWD,EAAMC,UAAtB,WACI,iBAAMA,UAAU,cAAhB,UACI,SAACJ,EAAD,OAEJ,iBAAMI,UAAU,cAAhB,UACI,SAACR,EAAD,W,uGCVD,SAASS,IACpB,OACI,gBAAKD,UAAW,MAAhB,UACI,oBAAQA,UAAU,aAAlB,WACI,gBACIE,IAAKC,EACLH,UAAU,WACVI,IAAI,UAER,8EAGA,SAAC,IAAD,KACA,SAAC,IAAD,CAASC,GAAI,SAAb,yBAGA,SAAC,IAAD,CAASA,GAAI,cAAb,yBAGA,SAAC,IAAD,CAASA,GAAI,qBAAb,2C,+DCjBT,SAASC,EAAQP,GACpB,OACI,iBACQA,EACJQ,MAAMC,EAAAA,EAAAA,GAAgBT,EAAMM,IAFhC,SAIKN,EAAMU,a,8CCbZ,SAASD,EAAgBE,EAAiBC,GAC7C,OAAOC,EAAAA,EAAAA,GAAO,SAAWF,EAAMC,K,eCC5B,SAASC,EAAOC,EAAkBF,GACrC,MAAMG,EAAWjB,oBAAyBgB,EAE1C,cAAIF,QAAJ,IAAIA,GAAAA,EAASI,SACFtB,OAAOC,SAASsB,OAASF,EAEzBA,E","sources":["components/ServedFrom.tsx","components/Version.tsx","components/DeployInfo.tsx","pages/IndexPage.tsx","router/components/AppLink.tsx","router/routePathUrl.ts","utils/urlUtils.ts"],"sourcesContent":["import React from \"react\";\n\nexport function ServedFrom() {\n    return (\n        <>\n            Served from: {window.location.host}\n        </>\n    );\n}\n","import React from \"react\";\n\nexport function Version() {\n    return (\n        <>\n            Version: {process.env.REACT_APP_VERSION}\n        </>\n    );\n}\n","import React from \"react\";\n\nimport \"./DeployInfo.scss\";\nimport { ServedFrom } from \"./ServedFrom\";\nimport { Version } from \"./Version\";\n\ntype Props = {\n    className?: string;\n}\n\nexport function DeployInfo(props: Props) {\n    return (\n        <div className={props.className}>\n            <span className=\"deploy-text\">\n                <Version />\n            </span>\n            <span className=\"deploy-text\">\n                <ServedFrom />\n            </span>\n        </div>\n    );\n}\n","import React from \"react\";\n\nimport \"./IndexPage.scss\";\nimport logo from \"../assets/e.png\";\nimport { AppLink } from \"../router/components/AppLink\";\nimport { DeployInfo } from \"../components/DeployInfo\";\n\nexport default function IndexPage() {\n    return (\n        <div className={\"App\"}>\n            <header className=\"App-header\">\n                <img\n                    src={logo}\n                    className=\"App-logo\"\n                    alt=\"logo\"\n                />\n                <p>\n                    This is the Estimate Trello Powerup welcome page.\n                </p>\n                <DeployInfo />\n                <AppLink to={\"/dummy\"}>\n                    Dummy page\n                </AppLink>\n                <AppLink to={\"/board-page\"}>\n                    Board page\n                </AppLink>\n                <AppLink to={\"/card-back-section\"}>\n                    Card back section page\n                </AppLink>\n            </header>\n        </div>\n    );\n}\n","import React from \"react\";\nimport { getRoutePathUrl } from \"../routePathUrl\";\n\ntype AnchorProps = React.DetailedHTMLProps<React.AnchorHTMLAttributes<HTMLAnchorElement>, HTMLAnchorElement>;\n\ntype Props = Omit<AnchorProps, \"href\"> & {\n    to: RoutePath\n}\n\nexport function AppLink(props: Props) {\n    return (\n        <a\n            {...props}\n            href={getRoutePathUrl(props.to)}\n        >\n            {props.children}\n        </a>\n    );\n}\n","import { getUrl, UrlOptions } from \"../utils/urlUtils\";\n\nexport function getRoutePathUrl(path: RoutePath, options?: UrlOptions) {\n    return getUrl(\"?path=\" + path, options);\n}\n","export type UrlOptions = {\n    absolute?: boolean,\n}\n\nexport function getUrl(endpoint: string, options?: UrlOptions) {\n    const relative = process.env.PUBLIC_URL + endpoint;\n\n    if (options?.absolute)\n        return window.location.origin + relative;\n    else\n        return relative;\n}\n"],"names":["ServedFrom","window","location","host","Version","process","DeployInfo","props","className","IndexPage","src","logo","alt","to","AppLink","href","getRoutePathUrl","children","path","options","getUrl","endpoint","relative","absolute","origin"],"sourceRoot":""}